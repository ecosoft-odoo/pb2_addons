<?xml version="1.0" encoding="UTF-8"?>
<openerp>
    <data>
        <!-- Directory for Account XLSX Reports -->
        <record model="document.directory" id="dir_account_reports">
            <field name="name">Account Reports</field>
            <field name="parent_id" ref="document.dir_root"/>
            <field name="user_id" ref="base.user_root"/>
            <field name="ressource_id">0</field>
            <field name="group_ids" eval="[(4, ref('base.group_user'))]"/>
        </record>

        # Input Tax Report
        <record id="xlsx_report_input_tax" model="ir.attachment">
            <field name="res_model">xlsx.report.input.tax</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_input_tax.xlsx</field>
            <field name="name">Input Tax Report</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Input Tax Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'calendar_period_id.calendar_name${value or ""}',
                                'B4': 'taxbranch_id.name${value or ""}',
                                'B5': '${env.user.display_name}',
                                'B6': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A10': 'tax_sequence_display${value or ""}',
                                'B10': 'invoice_date${value or ""}#{number_format=date}',
                                'C10': 'invoice_number${value or ""}',
                                'D10': 'partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title.name, value.name]))) or ""}',
                                'E10': 'partner_id.vat${value or ""}#{number_format=text}',
                                'F10': 'partner_id.taxbranch${value and (value == "00000" and "Head Office" or value) or ""}',
                                'G10': 'base${value or ""}#{number_format=number}',
                                'H10': 'amount${value or ""}#{number_format=number}',
                                'I10': 'move_number${value or ""}',
                            },
                            '_TAIL_0': {
                                'A10': '${"Total"}#{font=bold}',
                                'G10': '@{sum}#{font=bold;number_format=number}',
                                'H10': '@{sum}#{font=bold;number_format=number}',
                            }
                        }
                    }
                }
            </field>
        </record>

        # Partner Detail
        <record id="xlsx_report_partner_detail" model="ir.attachment">
            <field name="res_model">xlsx.report.partner.detail</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_partner_detail.xlsx</field>
            <field name="name">Partner Detail</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Partner Detail Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'partner_type${value and dict(customer="Customer", supplier="Supplier", customer_and_supplier="Customer and Supplier", customer_or_supplier="Customer or Supplier")[value] or ""}',
                                'B4': 'active${value and dict(true="True", false="False")[value] or ""}',
                                'B5': 'category_ids${value and ", ".join([x.name for x in value]) or ""}',
                                'B6': 'partner_ids${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.title.name, x.name]))) for x in value]) or ""}',
                                'B7': '${env.user.display_name}',
                                'B8': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'partner_detail_results': {
                                'A11': 'search_key${value or ""}#{number_format=text}',
                                'B11': 'id${value and " ".join(list(filter(lambda l: l != False, [env["res.partner"].browse(value).title.name, env["res.partner"].browse(value).name]))) or ""}',
                                'C11': 'is_company${value and "X" or ""}',
                                'D11': 'customer${value and "X" or ""}',
                                'E11': 'supplier${value and "X" or ""}',
                                'F11': 'category_id.name${value or ""}',
                                'G11': 'tag_ids${value and ", ".join([x.name for x in value]) or ""}',
                                'H11': 'street${value or ""}',
                                'I11': 'street2${value or ""}',
                                'J11': 'township_id.name${value or ""}',
                                'K11': 'district_id.name${value or ""}',
                                'L11': 'province_id.name${value or ""}',
                                'M11': 'country_id.name${value or ""}',
                                'N11': 'zip${value or ""}#{number_format=text}',
                                'O11': 'vat${value or ""}#{number_format=text}',
                                'P11': 'taxbranch${value or ""}',
                                'Q11': 'mobile${value or ""}',
                                'R11': 'fax${value or ""}',
                                'S11': 'website${value or ""}',
                                'T11': 'email${value or ""}',
                                'U11': 'customer_legacy_code${value or ""}',
                                'V11': 'supplier_legacy_code${value or ""}',
                                'W11': 'comment${value or ""}',
                                'X11': 'property_account_payable.code${value or ""}#{number_format=text}',
                                'Y11': 'property_account_payable.name${value or ""}',
                                'Z11': 'property_account_receivable.code${value or ""}#{number_format=text}',
                                'AA11': 'property_account_receivable.name${value or ""}',
                                'AB11': 'property_supplier_payment_term.name${value or ""}',
                                'AC11': 'property_payment_term.name${value or ""}',
                                'AD11': 'bank_ids${value and (value.filtered(lambda l: l.default is True) and value.filtered(lambda l: l.default is True)[0].acc_number or "") or ""}#{number_format=text}',
                                'AE11': 'bank_ids${value and (value.filtered(lambda l: l.default is True) and " ".join(filter(lambda x: x != False, [value.with_context(lang="th_TH").filtered(lambda l: l.default is True)[0].bank.name, value.with_context(lang="th_TH").filtered(lambda l: l.default is True)[0].bank_branch.name])) or "") or ""}',
                                'AF11': 'bank_ids${value and (value.filtered(lambda l: l.default is True) and " ".join(filter(lambda x: x != False, [value.with_context(lang="th_TH").filtered(lambda l: l.default is True)[0].partner_id.title.name, value.with_context(lang="th_TH").filtered(lambda l: l.default is True)[0].partner_id.name])) or "") or ""}',
                                'AG11': 'bank_ids${value and (value.filtered(lambda l: l.default is True) and (value.filtered(lambda l: l.default is True)[0].active is True and "X" or "") or "") or ""}',
                                'AH11': 'bank_ids${value and (value.filtered(lambda l: l.default is True) and (value.filtered(lambda l: l.default is True)[0].default is True and "X" or "")) or ""}',
                                'AI11': 'income_tax_form${value and dict(env["res.partner"]._columns["income_tax_form"].selection)[value] or ""}',
                                'AJ11': 'create_date${value or ""}#{number_format=date}',
                                'AK11': 'create_uid${value and value.with_context(lang="th_TH").display_name or ""}',
                                'AL11': 'write_date${value or ""}#{number_format=date}',
                                'AM11': 'write_uid${value and value.with_context(lang="th_TH").display_name or ""}',
                                'AN11': 'active${value and "X" or ""}',
                            },
                        },
                        'Partner Bank Account Detail Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'partner_type${value and dict(customer="Customer", supplier="Supplier", customer_and_supplier="Customer and Supplier", customer_or_supplier="Customer or Supplier")[value] or ""}',
                                'B4': 'active${value and dict(true="True", false="False")[value] or ""}',
                                'B5': 'category_ids${value and ", ".join([x.name for x in value]) or ""}',
                                'B6': 'partner_ids${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.title.name, x.name]))) for x in value]) or ""}',
                                'B7': '${env.user.display_name}',
                                'B8': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'partner_bank_account_detail_results': {
                                'A11': 'partner_id.search_key${value or ""}#{number_format=text}',
                                'B11': 'partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title.name, value.name]))) or ""}',
                                'C11': 'bank_id.acc_number${value or ""}#{number_format=text}',
                                'D11': 'bank_id${value and " ".join(list(filter(lambda l: l != False, [value.bank.name, value.bank_branch.name]))) or ""}',
                                'E11': 'bank_id.partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title.name, value.name]))) or ""}',
                                'F11': 'bank_id${value and (value.active is True and "X" or "") or ""}',
                                'G11': 'bank_id${value and (value.default is True and "X" or "") or ""}',
                            },
                        },
                    }
                }
            </field>
        </record>

        # Advance Status
        <record id="xlsx_report_advance_status" model="ir.attachment">
            <field name="res_model">xlsx.report.advance.status</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_advance_status.xlsx</field>
            <field name="name">Advance Status</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Employee Advance Status Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'date_report${value or ""}#{number_format=date}',
                                'B4': 'employee_ids${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.title_id.name, x.first_name, x.mid_name, x.last_name]))) for x in value]) or ""}',
                                'B5': '${env.user.display_name}',
                                'B6': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A9': 'operating_unit_id.name${value or ""}',
                                'B9': 'number${value or ""}',
                                'C9': 'invoice_id.number${value or ""}',
                                'D9': 'remark${value or ""}',
                                'E9': 'invoice_id.date_invoice#{number_format=date}',
                                'F9': 'date_due#{number_format=date}',
                                'G9': 'employee_id.employee_code${value or ""}',
                                'H9': 'employee_id${value and " ".join(list(filter(lambda l: l != False, [value.title_id.name, value.first_name, value.mid_name, value.last_name]))) or ""}',
                                'I9': 'amount_advanced${value or ""}#{number_format=number}',
                                'J9': 'amount_to_clearing${value or ""}#{number_format=number}',
                                'K9': "${'=IF(AND(B3&lt;&gt;\"\",?(F9)&lt;&gt;\"\"),B3-?(F9),\"\")'}",
                                'L9': "${'=IF(AND(?(K9)&lt;&gt;\"\",?(K9)&lt;=0),?(J9),\"\")'}#{number_format=number}",
                                'M9': "${'=IF(AND(?(K9)&lt;&gt;\"\",?(K9)&gt;=1,?(K9)&lt;=15),?(J9),\"\")'}#{number_format=number}",
                                'N9': "${'=IF(AND(?(K9)&lt;&gt;\"\",?(K9)&gt;=16,?(K9)&lt;=30),?(J9),\"\")'}#{number_format=number}",
                                'O9': "${'=IF(AND(?(K9)&lt;&gt;\"\",?(K9)&gt;=30),?(J9),\"\")'}#{number_format=number}",
                            },
                            '_TAIL_0': {
                                'A9': '${"Total"}#{font=bold}',
                                'I9': '@{sum}#{font=bold;number_format=number}',
                                'J9': '@{sum}#{font=bold;number_format=number}',
                                'L9': '@{sum}#{font=bold;number_format=number}',
                                'M9': '@{sum}#{font=bold;number_format=number}',
                                'N9': '@{sum}#{font=bold;number_format=number}',
                                'O9': '@{sum}#{font=bold;number_format=number}',
                            }
                        },
                    }
                }
            </field>
        </record>

        # Cheque Register
        <record id="xlsx_report_cheque_register" model="ir.attachment">
            <field name="res_model">xlsx.report.cheque.register</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_cheque_register.xlsx</field>
            <field name="name">Cheque Register</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Cheque Register Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'date_start${value or ""}#{number_format=date}',
                                'B4': 'cheque_lot_ids${value and ", ".join([x.name for x in value]) or ""}',
                                'B5': 'number_cheque_from${value or ""}',
                                'D3': 'date_end${value or ""}#{number_format=date}',
                                'D5': 'number_cheque_to${value or ""}',
                                'B6': 'journal_ids${value and ", ".join([x.default_credit_account_id.code for x in value]) or ""}',
                                'B7': '${env.user.display_name}',
                                'B8': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A11': 'cheque_lot_id.journal_id.default_credit_account_id.code${value or ""}#{align=left}',
                                'B11': 'cheque_lot_id.journal_id.default_credit_account_id.name${value or ""}',
                                'C11': 'voucher_id.partner_id.search_key${value or ""}',
                                'D11': 'voucher_id.partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title.name, value.name]))) or ""}',
                                'E11': 'cheque_lot_id.name${value or ""}',
                                'F11': 'number${value or ""}',
                                'G11': 'voucher_id.number${value or ""}',
                                'H11': 'voucher_id.date${value or ""}#{number_format=date}',
                                'I11': 'amount${value or ""}#{number_format=number}',
                                'J11': 'voucher_id.date_cheque_received${value or ""}#{number_format=date}',
                                'K11': 'voucher_id.move_ids${value and (value.mapped("match_import_id") and value.mapped("match_import_id").date_value or "") or ""}#{number_format=date}',
                                'L11': 'date_void${value or ""}#{number_format=date}',
                                'M11': 'payment_export_id.user_id.display_name${value or ""}',
                            },
                            '_TAIL_0': {
                                'A11': '${"Total"}#{font=bold}',
                                'I11': '@{sum}#{font=bold;number_format=number}',
                            }
                        }
                    }
                }
            </field>
        </record>

        # Contract Collateral
        <record id="xlsx_report_contract_collateral" model="ir.attachment">
            <field name="res_model">xlsx.report.contract.collateral</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_contract_collateral.xlsx</field>
            <field name="name">Contract Collateral</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Contract Collateral Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'date_report${value or ""}#{number_format=date}',
                                'B4': 'partner_ids${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.title.name, x.name]))) for x in value]) or ""}',
                                'B5': '${env.user.display_name}',
                                'B6': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A9': 'operating_unit_id${value and (value.org_id and value.org_id.name_short or "") or ""}',
                                'B9': 'supplier_id.search_key${value or ""}',
                                'C9': 'supplier_id${value and " ".join(list(filter(lambda l: l != False, [value.title.name, value.name]))) or ""}',
                                'D9': 'name${value or ""}',
                                'E9': 'requisition_id.purchase_ids${value and (value.mapped("order_id").filtered(lambda l: l.state == "done") and value.mapped("order_id").filtered(lambda l: l.state == "done")[0].name or "") or ""}',
                                'F9': 'display_code${value or ""}',
                                'G9': 'state${value or ""}',
                                'H9': 'start_date${value or ""}#{number_format=date}',
                                'I9': 'end_date${value or ""}#{number_format=date}',
                                'J9': 'collateral_type_id.name${value or ""}',
                                'K9': 'collateral_no${value or ""}',
                                'L9': 'collateral_date${value or ""}#{number_format=date}',
                                'M9': 'bank${value or ""}',
                                'N9': 'branch${value or ""}',
                                'O9': 'currency_id.name${value or ""}',
                                'P9': 'collateral_agreement_amt${value or ""}#{number_format=number}',
                                'Q9': 'collateral_due_date${value or ""}#{number_format=date}',
                                'R9': "${'=IF(AND(B3&lt;&gt;\"\",?(Q9)&lt;&gt;\"\"),B3-?(Q9),\"\")'}",
                                'S9': "${'=IF(AND(?(R9)&lt;&gt;\"\",?(R9)&lt;=0),?(P9),\"\")'}",
                                'T9': "${'=IF(AND(?(R9)&lt;&gt;\"\",?(R9)&gt;=1,?(R9)&lt;=30),?(P9),\"\")'}",
                                'U9': "${'=IF(AND(?(R9)&lt;&gt;\"\",?(R9)&gt;=31,?(R9)&lt;=60),?(P9),\"\")'}",
                                'V9': "${'=IF(AND(?(R9)&lt;&gt;\"\",?(R9)&gt;=61,?(R9)&lt;=90),?(P9),\"\")'}",
                                'W9': "${'=IF(AND(?(R9)&lt;&gt;\"\",?(R9)&gt;=91,?(R9)&lt;=180),?(P9),\"\")'}",
                                'X9': "${'=IF(AND(?(R9)&lt;&gt;\"\",?(R9)&gt;=181,?(R9)&lt;=365),?(P9),\"\")'}",
                                'Y9': "${'=IF(AND(?(R9)&lt;&gt;\"\",?(R9)&gt;=366,?(R9)&lt;=1095),?(P9),\"\")'}",
                                'Z9': "${'=IF(AND(?(R9)&lt;&gt;\"\",?(R9)&gt;1095),?(P9),\"\")'}",
                            },
                            '_TAIL_0': {
                                'A9': '${"Total"}#{font=bold}',
                                'P9': '@{sum}#{font=bold;number_format=number}',
                                'S9': '@{sum}#{font=bold;number_format=number}',
                                'T9': '@{sum}#{font=bold;number_format=number}',
                                'U9': '@{sum}#{font=bold;number_format=number}',
                                'V9': '@{sum}#{font=bold;number_format=number}',
                                'W9': '@{sum}#{font=bold;number_format=number}',
                                'X9': '@{sum}#{font=bold;number_format=number}',
                                'Y9': '@{sum}#{font=bold;number_format=number}',
                                'Z9': '@{sum}#{font=bold;number_format=number}',
                            }
                        }
                    }
                }
            </field>
        </record>

        # Advance Payment
        <record id="xlsx_report_advance_payment" model="ir.attachment">
            <field name="res_model">xlsx.report.advance.payment</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_advance_payment.xlsx</field>
            <field name="name">Advance Payment</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Advance Payment Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}#{align=left;number_format=text}',
                                'B3': 'account_ids${value and ", ".join([x.code for x in value]) or ""}#{align=left;number_format=text}',
                                'B4': 'date_report${value or ""}#{align=left;number_format=date}',
                                'B5': '${env.user.display_name}#{align=left;number_format=text}',
                                'B6': '${time.strftime("%d/%m/%Y")}#{align=left;number_format=date}',
                            },
                            'results': {
                                'A9': 'account_id.code${value or ""}#{number_format=text}',
                                'B9': 'account_id.name${value or ""}#{number_format=text}',
                                'C9': 'id${value and env["account.move.line"].browse(value).invoice.operating_unit_id.name or env["account.move.line"].browse(value).operating_unit_id.name or ""}#{number_format=text}',
                                'D9': 'partner_id.search_key${value or ""}#{number_format=text}',
                                'E9': 'partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title.name, value.name]))) or ""}#{number_format=text}',
                                'F9': 'partner_id.category_id.name${value or ""}#{number_format=text}',
								'G9': 'move_id${value and value.name or ""}#{number_format=text}',
                                'H9': 'name${value or ""}#{number_format=text}',                               
                                'I9': 'move_id${value and value.date_document or ""}#{number_format=date}',
                                'J9': 'move_id${value and value.date or ""}#{number_format=date}',
								'K9': 'invoice.number${value or ""}#{number_format=text}',
                                'L9': 'invoice.date_document${value or ""}#{number_format=date}',
                                'M9': 'invoice.date_invoice${value or ""}#{number_format=date}',
                                'N9': 'invoice.source_document_id${value and value._name == "purchase.order" and value.name or ""}#{number_format=text}',
                                'O9': 'invoice.source_document_id${value and value._name == "purchase.order" and value.contract_id.display_code or ""}#{number_format=text}',
                                'P9': 'id${value and env["account.move.line"].browse(value).debit - env["account.move.line"].browse(value).credit or ""}#{number_format=number}',
                                'Q9': 'invoice.payment_ids${value and "".join(value.filtered(lambda l: l.doctype == "payment")[0].move_id.name) or ""}#{number_format=text}',
                                'R9': 'invoice.payment_ids${value and "".join(value.filtered(lambda l: l.doctype == "payment")[0].move_id.date_document) or ""}#{number_format=date}',
                                'S9': "${'=IF(?(R9)&lt;&gt;\"\",?(R9)+IF(?(F9)=\"ต่างประเทศ\",60,18),\"\")'}#{number_format=date}",
                                'T9': "${'=IF(AND(B4&lt;&gt;\"\",?(S9)&lt;&gt;\"\"),B4-?(S9),\"\")'}#{number_format=number}",
                                'U9': "${'=IF(AND(?(T9)&lt;&gt;\"\",?(T9)&lt;=0),?(P9),\"\")'}#{number_format=number}",
                                'V9': "${'=IF(AND(?(T9)&lt;&gt;\"\",?(T9)&gt;=1,?(T9)&lt;=30),?(P9),\"\")'}#{number_format=number}",
                                'W9': "${'=IF(AND(?(T9)&lt;&gt;\"\",?(T9)&gt;=31,?(T9)&lt;=60),?(P9),\"\")'}#{number_format=number}",
                                'X9': "${'=IF(AND(?(T9)&lt;&gt;\"\",?(T9)&gt;=61,?(T9)&lt;=90),?(P9),\"\")'}#{number_format=number}",
                                'Y9': "${'=IF(AND(?(T9)&lt;&gt;\"\",?(T9)&gt;=91,?(T9)&lt;=180),?(P9),\"\")'}#{number_format=number}",
                                'Z9': "${'=IF(AND(?(T9)&lt;&gt;\"\",?(T9)&gt;=181,?(T9)&lt;=365),?(P9),\"\")'}#{number_format=number}",
                                'AA9': "${'=IF(AND(?(T9)&lt;&gt;\"\",?(T9)&gt;365),?(P9),\"\")'}#{number_format=number}",
                            }, 
                            '_GROUPBY_results["account_id"]': {  # groupby
                                'P9': '@{sum}#{font=bold;number_format=number}',
                            },
                        }
                    }
                }
            </field>
        </record>

        # Payable Detail
        <record id="xlsx_report_payable_detail" model="ir.attachment">
            <field name="res_model">xlsx.report.payable.detail</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_payable_detail.xlsx</field>
            <field name="name">Payable Detail</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Payable Detail Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}#{align=left;number_format=text}',
                                'B3': 'account_ids${value and ", ".join([x.code for x in value]) or ""}#{align=left;number_format=text}',
                                'B4': 'partner_ids${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.title.name, x.name]))) for x in value]) or ""}#{align=left;number_format=text}',
                                'B5': 'fiscalyear_start_id.name${value or ""}#{align=left;number_format=text}',
                                'D5': 'fiscalyear_end_id.name${value or ""}#{align=left;number_format=text}',
                                'B6': 'filter${value and dict(env["xlsx.report.payable.detail"]._columns["filter"].selection)[value] or ""}#{align=left;number_format=text}',
                                'B7': 'period_start_id.name${value or ""}#{align=left;number_format=text}',
                                'D7': 'period_end_id.name${value or ""}#{align=left;number_format=text}',
                                'B8': 'date_start${value or ""}#{align=left;number_format=date}',
                                'D8': 'date_end${value or ""}#{align=left;number_format=date}',
                                'B9': 'as_of_date${value or ""}#{align=left;number_format=date}',
                                'B10': 'period_length_days${value or ""}#{align=left}',
                                'B11': 'move_ids${value and ", ".join([x.name for x in value]) or ""}#{align=left;number_format=text}',
                                'B12': '${env.user.display_name}#{align=left;number_format=text}',
                                'B13': '${time.strftime("%d/%m/%Y")}#{align=left;number_format=date}',
                                'AH1': 'date_start_real${value or ""}#{number_format=date}',
                                'AH2': 'date_end_real${value or ""}#{number_format=date}',
                                'AH6': 'period_length_days${value}',
                                'AH7': 'period_length_days${value * 2}',
                                'AH8': 'period_length_days${value * 3}',
                                'AH9': 'period_length_days${value * 4}',
                            },
                            'results': {
                                'A16': 'partner_id.search_key${value or ""}#{number_format=text}',
                                'B16': 'partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title.name, value.name]))) or ""}#{number_format=text}',
                                'C16': 'invoice.supplier_invoice_number${value or ""}#{number_format=text}',
                                'D16': 'invoice.purchase_billing_id.name${value or ""}#{number_format=text}',
                                'E16': 'move_id.name${value or ""}#{number_format=text}',
                                'F16': 'move_id.date_document${value or ""}#{number_format=date}',
                                'G16': 'period_id.fiscalyear_id.name${value or ""}#{number_format=text}',
                                'H16': 'period_id.name${value or ""}#{number_format=text}',
                                'I16': 'date${value or ""}#{number_format=date}',
                                'J16': 'date_maturity${value or ""}#{number_format=date}',
                                'K16': "${'=IF(AND(?(AC16)&lt;&gt;\"Paid\",?(AC16)&lt;&gt;\"Cancelled\",?(J16)&lt;&gt;\"\",AH2&lt;&gt;\"\"),AH2-?(J16),\"\")'}",
                                'L16': "${'=IF(?(K16)&lt;&gt;\"\",IF(?(K16)&lt;=0,\"Not Due\",IF(AND(?(K16)&gt;=1,?(K16)&lt;=AH6),1&amp;\"-\"&amp;AH6&amp;\" Days\",IF(AND(?(K16)&gt;=AH6+1,?(K16)&lt;=AH7),AH6+1&amp;\"-\"&amp;AH7&amp;\" Days\",IF(AND(?(K16)&gt;=AH7+1,?(K16)&lt;=AH8),AH7+1&amp;\"-\"&amp;AH8&amp;\" Days\",IF(AND(?(K16)&gt;=AH8+1,?(K16)&lt;=AH9),AH8+1&amp;\"-\"&amp;AH9&amp;\" Days\",IF(?(K16)&gt;AH9,\"Over \"&amp;AH9&amp;\" Days\",\"\")))))),\"\")'}",
                                'M16': 'invoice.source_document_id${value and value.display_name or ""}#{number_format=text}',
                                'N16': 'invoice.source_document_id${value and value._name == "purchase.order" and value.sudo().contract_id.display_code or ""}#{number_format=text}',
                                'O16': '${"=IF(?(Q16)&lt;0,-1*?(AY16),?(AY16))"}#{number_format=number}',
                                'P16': '${"=IF(?(Q16)&lt;0,-1*?(AZ16),?(AZ16))"}#{number_format=number}',
                                'Q16': 'id${value and env["account.move.line"].browse(value).credit - env["account.move.line"].browse(value).debit or 0}#{number_format=number}',
                                'R16': 'currency_id.name${value or "THB"}#{number_format=text}',
                                'S16': 'invoice.tax_line${value and ", ".join(list(filter(lambda l: l != False, [x.tax_code_id.code for x in value]))) or ""}#{number_format=text}',
                                'T16': 'move_id.narration${value or ""}#{number_format=text}',
                                'U16': 'invoice.payment_ids${value and ", ".join(list(filter(lambda l: l != False, [x.move_id.doctype == "payment" and x.move_id.name or False for x in value]))) or ""}#{number_format=text}',
                                'V16': 'invoice.payment_ids${value and sum(list(filter(lambda l: l != False, [x.move_id.doctype == "payment" and x.document_id and x.document_id._name == "account.voucher" and x.document_id.amount or False for x in value]))) or 0}#{number_format=number}',
                                'W16': 'invoice.payment_ids${value and ", ".join(list(filter(lambda l: l != False, [x.move_id.doctype == "payment" and x.move_id.document_id and x.move_id.document_id._name == "account.voucher" and (x.move_id.document_id.payment_type == "transfer" and dict(env["account.voucher"]._columns["transfer_type"].selection)[x.move_id.document_id.transfer_type] or "Cheque") or False for x in value]))) or ""}#{number_format=text}',
                                'X16': 'invoice.payment_ids${value and ", ".join(list(filter(lambda l: l != False, [x.move_id.doctype == "payment" and x.move_id.document_id and x.move_id.document_id._name == "account.voucher" and x.move_id.document_id.payment_export_id and x.move_id.document_id.payment_export_id.state == "done" and x.move_id.document_id.payment_export_id.name or False for x in value]))) or ""}#{number_format=text}',
                                'Y16': 'invoice.payment_ids${value and ", ".join(list(filter(lambda l: l != False, [x.move_id.doctype == "payment" and x.move_id.document_id and x.move_id.document_id._name == "account.voucher" and x.move_id.document_id.number_cheque or False for x in value]))) or ""}#{number_format=text}',
                                'Z16': 'invoice.payment_ids${value and ", ".join(list(filter(lambda l: l != False, [x.move_id.doctype == "payment" and x.move_id.document_id and x.move_id.document_id._name == "account.voucher" and x.move_id.document_id.wht_cert_ids and dict(env["account.wht.cert"]._columns["income_tax_form"].selection)[x.move_id.document_id.wht_cert_ids[0].income_tax_form] or False for x in value]))) or ""}#{number_format=text}',
                                'AA16': 'invoice${value and sum(list(filter(lambda l: l != False, [x.move_id.doctype == "payment" and x.move_id.document_id and x.move_id.document_id._name == "account.voucher" and x.move_id.document_id.wht_cert_ids and sum(x.move_id.document_id.wht_cert_ids[0].wht_line.filtered(lambda l: l.voucher_tax_id.invoice_id == value).mapped("amount")) or 0 for x in value.payment_ids]))) or 0}#{number_format=number}',
                                'AB16': 'move_id.create_uid.display_name${value or ""}#{number_format=text}',
                                'AC16': 'invoice.state${value and dict(env["account.invoice"]._columns["state"].selection)[value] or ""}#{number_format=text}',
                                'AY16': 'invoice.amount_untaxed${value and abs(value) or 0}#{number_format=number}',
                                'AZ16': 'invoice.amount_tax${value and abs(value) or 0}#{number_format=number}',
                            },
                            '_TAIL_0': {
                                'A16': '${"Total"}#{font=bold}',
                                'O16': '@{sum}#{font=bold;number_format=number}',
                                'P16': '@{sum}#{font=bold;number_format=number}',
                                'Q16': '@{sum}#{font=bold;number_format=number}',
                                'V16': '@{sum}#{font=bold;number_format=number}',
                                'AA16': '@{sum}#{font=bold;number_format=number}',
                            }
                        }
                    }
                }
            </field>
        </record>

        # Payable Balance
        <record id="xlsx_report_payable_balance" model="ir.attachment">
            <field name="res_model">xlsx.report.payable.balance</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_payable_balance.xlsx</field>
            <field name="name">Payable Balance</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Payable Balance Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'account_ids${value and ", ".join([x.code for x in value]) or ""}',
                                'B4': 'partner_ids${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.title.name, x.name]))) for x in value]) or ""}',
                                'B5': 'fiscalyear_start_id.name${value or ""}',
                                'D5': 'fiscalyear_end_id.name${value or ""}',
                                'B6': 'filter${value and dict(env["xlsx.report.payable.balance"]._columns["filter"].selection)[value] or ""}',
                                'B7': 'period_start_id.name${value or ""}',
                                'D7': 'period_end_id.name${value or ""}',
                                'B8': 'date_start${value or ""}#{number_format=date}',
                                'D8': 'date_end${value or ""}#{number_format=date}',
                                'B9': '${env.user.display_name}',
                                'B10': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A13': 'account_id.code${value or ""}',
                                'B13': 'partner_id.search_key${value or ""}',
                                'C13': 'partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title.name, value.name]))) or ""}',
                                'D13': 'partner_id${value and " ".join(list(filter(lambda l: l != False, [value.street, value.street2, value.township_id.name, value.district_id.name, value.province_id.name, value.zip]))) or ""}',
                                'E13': 'move_id.name${value or ""}',
                                'F13': 'invoice.supplier_invoice_number${value or ""}',
                                'G13': 'move_id.date${value or ""}#{number_format=date}',
                                'H13': 'move_id.narration${value or ""}',
                                'I13': 'id${value and (env["account.move.line"].browse(value).credit - env["account.move.line"].browse(value).debit) or ""}#{number_format=number}',
                                'J13': 'id${value and (env["account.move.line"].browse(value).reconcile_partial_id != "" and sum(list(env["account.move.line"].browse(value).reconcile_partial_id.line_partial_ids.mapped("credit"))) - sum(list(env["account.move.line"].browse(value).reconcile_partial_id.line_partial_ids.mapped("debit"))) or (env["account.move.line"].browse(value).credit - env["account.move.line"].browse(value).debit)) or ""}#{number_format=number}',
                            },
                            '_TAIL_0': {
                                'A13': '${"Total"}#{font=bold}',
                                'I13': '@{sum}#{font=bold;number_format=number}',
                                'J13': '@{sum}#{font=bold;number_format=number}',
                            }
                        }
                    }
                }
            </field>
        </record>

        # Purchase Billing
        <record id="xlsx_report_purchase_billing" model="ir.attachment">
            <field name="res_model">xlsx.report.purchase.billing</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_purchase_billing.xlsx</field>
            <field name="name">Purchase Billing</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Purchase Billing Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'date_billing_start${value or ""}#{number_format=date}',
                                'D3': 'date_billing_end${value or ""}#{number_format=date}',
                                'B4': 'date_due_billing_start${value or ""}#{number_format=date}',
                                'D4': 'date_due_billing_end${value or ""}#{number_format=date}',
                                'B5': 'partner_ids${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.title.name, x.name]))) for x in value]) or ""}',
                                'B6': 'billing_ids${value and ", ".join([x.name for x in value]) or ""}',
                                'B7': '${env.user.display_name}',
                                'B8': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A11': 'billing_id.name${value or ""}',
                                'B11': 'billing_id.date${value or ""}#{number_format=date}',
                                'C11': 'billing_id.date_due${value or ""}#{number_format=date}',
                                'D11': 'billing_id.date_sent${value or ""}#{number_format=date}',
                                'E11': 'invoice_id.purchase_billing_id.user_id.display_name${value or ""}',
                                'F11': 'invoice_id.partner_id.search_key${value or ""}',
                                'G11': 'invoice_id.partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title.name, value.name]))) or ""}',
                                'H11': 'invoice_id.source_document_id${value and (value._table in ("purchase_order", "sale_order") and value.name or value.number or "")  or ""}',
                                'I11': 'invoice_id.source_document_id${value and ((value._table == "purchase_order" and value.contract_id) and value.sudo().contract_id.display_code or "") or ""}',
                                'J11': 'invoice_id.source_document_id${value and (value._table == "purchase_order" and value.notes or "") or ""}',
                                'K11': 'invoice_id.supplier_invoice_number${value or ""}',
                                'L11': 'invoice_id.amount_total${value or ""}#{number_format=number}',
                                'M11': 'invoice_id.number${value or ""}',
                                'N11': 'invoice_id.date_invoice${value or ""}#{number_format=date}',
                                'O11': 'invoice_id.date_due${value or ""}#{number_format=date}',
                                'P11': 'invoice_id.date_receipt_billing${value or ""}#{number_format=date}',
                                'Q11': 'invoice_id.validate_user_id.display_name${value or ""}',
                                'R11': 'invoice_id.state${value and dict(draft="Draft", proforma="Pro-forma", proforma2="Pro-forma", open="Open", paid="Paid", cancel="Cancelled")[value] or ""}',
                            },
                            '_TAIL_0': {
                                'A11': '${"Total"}#{font=bold}',
                                'K11': '@{sum}#{font=bold;number_format=number}',
                            }
                        }
                    }
                }
            </field>
        </record>

        # SLA Supplier
        <record id="xlsx_report_sla_supplier" model="ir.attachment">
            <field name="res_model">xlsx.report.sla.supplier</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_sla_supplier.xlsx</field>
            <field name="name">SLA Supplier</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'SLA Supplier Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'fiscalyear_start_id.name${value or ""}',
                                'D3': 'fiscalyear_end_id.name${value or ""}',
                                'B4': 'filter${value and dict(env["xlsx.report.sla.supplier"]._columns["filter"].selection)[value] or ""}',
                                'B5': 'period_start_id.name${value or ""}',
                                'D5': 'period_end_id.name${value or ""}',
                                'B6': 'date_start${value or ""}#{number_format=date}',
                                'D6': 'date_end${value or ""}#{number_format=date}',
                                'B7': 'source_document_type${value and dict(env["xlsx.report.sla.supplier"]._columns["source_document_type"].selection)[value] or ""}',
                                'B8': 'user_ids${value and ", ".join([x.display_name for x in value]) or ""}',
                                'B9': '${env.user.display_name}',
                                'B10': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A13': 'voucher_id.period_id.fiscalyear_id.name${value or ""}',
                                'B13': 'voucher_id.number${value or ""}',
                                'C13': 'voucher_id.partner_id.search_key${value or ""}',
                                'D13': 'voucher_id.partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title.name, value.name]))) or ""}',
                                'E13': 'voucher_id.partner_id.category_id.name${value or ""}',
                                'F13': 'voucher_id.payment_export_id.name${value or ""}',
                                'G13': 'count_invoice${value or ""}',
                                'H13': 'voucher_id.validate_user_id.display_name${value or ""}',
                                'I13': 'voucher_id${value and value.payment_type == "transfer" and dict(env["account.voucher"]._columns["transfer_type"].selection)[value.transfer_type] or "Cheque"}',
                                'J13': 'voucher_id.amount${value or ""}#{number_format=number}',
                                'K13': 'voucher_id.date${value or ""}#{number_format=date}',
                                'L13': 'voucher_id.payment_export_id.date_value${value or ""}#{number_format=date}',
                                'M13': 'date_due${value or ""}#{number_format=date}',
                                'N13': "${'=?(M13)-?(L13)'}",
                                'O13': "${'=IF(?(M13)&gt;=?(L13),\"Yes\",\"No\")'}",
                            }
                        }
                    }
                }
            </field>
        </record>

        # SLA Employee
        <record id="xlsx_report_sla_employee" model="ir.attachment">
            <field name="res_model">xlsx.report.sla.employee</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_sla_employee.xlsx</field>
            <field name="name">SLA Employee</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'SLA Employee Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'fiscalyear_start_id.name${value or ""}',
                                'D3': 'fiscalyear_end_id.name${value or ""}',
                                'B4': 'filter${value and dict(env["xlsx.report.sla.employee"]._columns["filter"].selection)[value] or ""}',
                                'B5': 'period_start_id.name${value or ""}',
                                'D5': 'period_end_id.name${value or ""}',
                                'B6': 'date_start${value or ""}#{number_format=date}',
                                'D6': 'date_end${value or ""}#{number_format=date}',
                                'B7': 'source_document_type${value and dict(env["xlsx.report.sla.employee"]._columns["source_document_type"].selection)[value] or ""}',
                                'B8': 'user_ids${value and ", ".join([x.display_name for x in value]) or ""}',
                                'B9': '${env.user.display_name}',
                                'B10': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A13': 'voucher_id.period_id.fiscalyear_id.name${value or ""}',
                                'B13': 'voucher_id.number${value or ""}',
                                'C13': "${'=IF(?(AE13)&lt;&gt;\"\",?(AE13),?(AF13))'}",
                                'D13': 'invoice_id.number${value or ""}',
                                'E13': 'invoice_id.comment${value or ""}',
                                'F13': 'invoice_id.partner_id.search_key${value or ""}',
                                'G13': 'invoice_id.partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title.name, value.name]))) or ""}',
                                'H13': 'invoice_id.partner_id.category_id.name${value or ""}',
                                'I13': 'voucher_id.payment_export_id.name${value or ""}',
                                'J13': 'voucher_id.validate_user_id.display_name${value or ""}',
                                'K13': 'voucher_id${value and value.payment_type == "transfer" and dict(env["account.voucher"]._columns["transfer_type"].selection)[value.transfer_type] or "Cheque"}',
                                'L13': 'voucher_line_id.amount${value or ""}#{number_format=number}',
                                'M13': 'invoice_id.date_document${value or ""}#{number_format=date}',
                                'N13': 'invoice_id.date_invoice${value or ""}#{number_format=date}',
                                'O13': 'invoice_id.date_due${value or ""}#{number_format=date}',
                                'P13': 'voucher_id.date${value or ""}#{number_format=date}',
                                'Q13': 'voucher_id.payment_export_id.date_value${value or ""}#{number_format=date}',
                                'R13': 'invoice_id.source_document_id${value and value._name == "hr.expense.expense" and value.date_valid or ""}#{number_format=date}',
                                'S13': 'business_day${value or 0}',
                                'T13': "${'=IF(?(S13)&lt;=5,\"Yes\",\"No\")'}",
                                'U13': "${'=IF(?(K13)=\"Cheque\",?(AG13),\"\")'}",
                                'V13': "${'=IF(?(M13)=\"\",\"\",IF(AND(DAY(?(M13))&gt;=9,DAY(?(M13))&lt;=22),\"KV 9 - 22\",\"KV 23 - 8\"))'}",
                                'W13': "${'=IF(?(M13)=\"\",\"\",IF(?(Q13)=\"\",\"ไม่มีวันที่ PE\",IF(AND(?(V13)=\"KV 9 - 22\",?(Q13)&lt;=DATE(YEAR(?(M13)),MONTH(?(M13)),30)),\"Yes\",IF(AND(?(V13)=\"KV 23 - 8\",MONTH(?(M13))&lt;12,?(Q13)&lt;=DATE(YEAR(?(M13)),MONTH(?(M13))+1,15)),\"Yes\",IF(AND(?(V13)=\"KV 23 - 8\",MONTH(?(M13))=12,?(Q13)&lt;=DATE(YEAR(?(M13))+1,MONTH(?(M13))-11,15)),\"Yes\",\"No\")))))'}",
                                'X13': "${'=IF(?(M13)=\"\",\"\",IF(AND(OR(AND(DAY(?(M13))&gt;=23,DAY(?(M13))&lt;=31),AND(DAY(?(M13))&gt;=1,DAY(?(M13))&lt;=8)),AND(DAY(?(Q13))&gt;=1,DAY(?(Q13))&lt;=15)),\"Yes\",IF(AND(AND(DAY(?(M13))&gt;=9,DAY(?(M13))&lt;=22),AND(DAY(?(Q13))&gt;=16,DAY(?(Q13))&lt;=31)),\"Yes\",\"No\")))'}",
                                'Y13': '${"=NETWORKDAYS(?(N13),?(M13),Holliday!B:B)"}',
                                'AI13': "${'=IF(?(B13)&lt;&gt;\"\",?(C13)&amp;\" \"&amp;?(E13)&amp;\" จำนวนเงิน \"&amp;TEXT(?(L13),\"#,##0.00\")&amp;\" บาท ได้โอนเงินเรียบร้อยแล้ว\",\"\")'}",
                                # hide column
                                'AE13': 'invoice_id.source_document_id${value and value.display_name or ""}',
                                'AF13': 'salary_number${value or ""}',
                                'AG13': 'voucher_id.move_ids${value and value.mapped("match_import_id") and value.mapped("match_import_id").date_value or ""}#{number_format=date}',                            }
                        }
                    }
                }
            </field>
        </record>

        # SLA Procurement
        <record id="xlsx_report_sla_procurement" model="ir.attachment">
            <field name="res_model">xlsx.report.sla.procurement</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_sla_procurement.xlsx</field>
            <field name="name">SLA Procurement</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'SLA Procurement Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'fiscalyear_start_id.name${value or ""}',
                                'D3': 'fiscalyear_end_id.name${value or ""}',
                                'B4': 'filter${value and dict(filter_no="No Filters", filter_date="Dates", filter_period="Periods")[value] or ""}',
                                'B5': 'period_start_id.name${value or ""}',
                                'D5': 'period_end_id.name${value or ""}',
                                'B6': 'date_start${value or ""}#{number_format=date}',
                                'D6': 'date_end${value or ""}#{number_format=date}',
                                'B7': 'user_ids${value and ", ".join([x.display_name for x in value]) or ""}',
                                'B8': '${env.user.display_name}',
                                'B9': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A12': 'period_id.fiscalyear_id.name${value or ""}',
                                'B12': 'source_document_id${value and value.display_name or ""}',
                                'C12': 'number${value or ""}',
                                'D12': 'comment${value or ""}',
                                'E12': 'partner_id.search_key${value or ""}',
                                'F12': 'partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title.name, value.name]))) or ""}',
                                'G12': 'partner_id.category_id.name${value or ""}',
                                'H12': 'validate_user_id.display_name${value or ""}',
                                'I12': 'payment_type${value and dict(transfer="Transfer", cheque="Cheque")[value] or ""}',
                                'J12': 'amount_total${value or ""}#{number_format=number}',
                                'K12': 'date_invoice${value or ""}#{number_format=date}',
                                'L12': 'date_receipt_billing${value or ""}#{number_format=date}',
                                'M12': 'business_day${value or 0}',
                                #'M12': '${"=NETWORKDAYS(?(L12),?(K12),Holliday!B:B)"}',
                                'N12': "${'=IF(?(M12)&lt;=4,\"Yes\",\"No\")'}",
                            }
                        }
                    }
                }
            </field>
        </record>

        # Supplier Receipt Follow Up
        <record id="xlsx_report_supplier_receipt_follow_up" model="ir.attachment">
            <field name="res_model">xlsx.report.supplier.receipt.follow.up</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_supplier_receipt_follow_up.xlsx</field>
            <field name="name">Supplier Receipt Follow Up</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Supplier Receipt Follow Up Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'fiscalyear_start_id.name${value or ""}',
                                'D3': 'fiscalyear_end_id.name${value or ""}',
                                'B4': 'filter${value and dict(filter_no="No Filters", filter_date="Dates", filter_period="Periods")[value] or ""}',
                                'B5': 'period_start_id.name${value or ""}',
                                'D5': 'period_end_id.name${value or ""}',
                                'B6': 'date_start${value or ""}#{number_format=date}',
                                'D6': 'date_end${value or ""}#{number_format=date}',
                                'B7': 'account_ids${value and ", ".join([x.code for x in value]) or ""}',
                                'B8': 'partner_ids${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.title.name, x.name]))) for x in value]) or ""}',
                                'B9': 'followup_receipt${value and dict(following="Following", received="Received")[value] or ""}',
                                'B10': '${env.user.display_name}',
                                'B11': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A14': 'voucher_id.partner_id.search_key${value or ""}',
                                'B14': 'voucher_id.partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title.name, value.name]))) or ""}',
                                'C14': 'voucher_id.number${value or ""}',
                                'D14': 'voucher_id.create_uid.display_name${value or ""}',
                                'E14': 'voucher_id.date_value${value or ""}#{number_format=date}',
                                'F14': 'voucher_id.move_ids${value and (value.mapped("match_import_id") and value.mapped("match_import_id").date_value or "") or ""}#{number_format=date}',
                                'G14': 'voucher_id.narration${value or ""}',
                                'H14': 'voucher_id.amount${value or ""}#{number_format=number}',
                                'I14': 'voucher_id.payment_type${value and dict(cheque="Cheque", transfer="Transfer")[value] or ""}',
                                'J14': 'voucher_id.number_cheque${value or ""}',
                                'K14': 'voucher_id.supplier_bank_id${value and " ".join(list(filter(lambda l: l != False, [value.bank.name, value.bank_branch.name]))) or ""}',
                                'L14': 'voucher_id.supplier_bank_id.acc_number${value or ""}',
                                'M14': 'voucher_id.partner_id${value and " ".join(list(filter(lambda l: l != False, [value.street, value.street2, value.township_id.name, value.district_id.name, value.province_id.name, value.zip]))) or ""}',
                                'N14': 'invoice_line_id.invoice_id.number${value or ""}',
                                'O14': 'invoice_line_id.account_id.code${value or ""}',
                                'P14': 'invoice_line_id.activity_group_id.name${value or ""}',
                                'Q14': 'invoice_line_id.activity_id.name${value or ""}',
                                'R14': 'invoice_line_id.price_subtotal${value or ""}#{number_format=number}',
                                'S14': 'invoice_line_id.chartfield_id.code${value or ""}',
                                'T14': 'invoice_line_id.chartfield_id.name${value or ""}',
                                'U14': 'invoice_line_id${value and ((value.chartfield_id.type == "pj:" and (value.project_id.pm_employee_id and " ".join(list(filter(lambda l: l != False, [value.project_id.pm_employee_id.title_id.name, value.project_id.pm_employee_id.first_name, value.project_id.pm_employee_id.mid_name, value.project_id.pm_employee_id.last_name]))) or "")) or (value.chartfield_id.type == "cp:" and (value.invest_construction_id.pm_employee_id and " ".join(list(filter(lambda l: l != False, [value.invest_construction_id.pm_employee_id.title_id.name, value.invest_construction_id.pm_employee_id.first_name, value.invest_construction_id.pm_employee_id.mid_name, value.invest_construction_id.pm_employee_id.last_name]))) or ""))) or ""}',
                                'V14': 'invoice_line_id${value and (value.chartfield_id.type == "pj:" and value.project_id.external_pm or "") or ""}',
                            },
                            '_TAIL_0': {
                                'A14': '${"Total"}#{font=bold}',
                                'H14': '@{sum}#{font=bold;number_format=number}',
                                'R14': '@{sum}#{font=bold;number_format=number}',
                            }
                        }
                    }
                }
            </field>
        </record>

        # Output Tax Report
        <record id="xlsx_report_output_tax" model="ir.attachment">
            <field name="res_model">xlsx.report.output.tax</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_output_tax.xlsx</field>
            <field name="name">Output Tax Report</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Output Tax Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'D3': 'calendar_period_id.calendar_name${value or ""}',
                                'D4': 'taxbranch_id.name${value or ""}',
                                'D5': '${env.user.display_name}',
                                'D6': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A10': 'invoice_date${value or ""}#{number_format=date}',
                                'B10': 'number_preprint${value or ""}',
                                'C10': 'invoice_number${value or ""}',
                                'D10': "${'=IF(?(B10)&lt;&gt;\"\",?(B10),?(C10))'}",
                                'E10': 'partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title.name, value.name]))) or ""}',
                                'F10': 'partner_id.vat${value or ""}#{number_format=text}',
                                'G10': 'partner_id.taxbranch${value and (value == "00000" and "Head Office" or value) or ""}',
                                'H10': 'base${value or ""}#{number_format=number}',
                                'I10': 'amount${value or ""}#{number_format=number}',
                                'J10': 'move_id.document_id${value and value._name == "account.invoice" and value.source_document_id and value.source_document_id._name == "sale.order" and value.source_document_id.workflow_process_id.name or ""}',
                                'K10': 'move_id.document_id${value and value._name == "account.invoice" and value.source_document_id and value.source_document_id._name == "sale.order" and value.source_document_id.workflow_process_id and value.source_document_id.name or ""}',
                                'L10': 'move_number${value or ""}',
                                'M10': 'move_id.document_id${value and value._name == "interface.account.entry" and value.name or ""}',
                                'N10': 'validate_user_id.display_name${value or ""}',
                            },
                            '_TAIL_0': {
                                'A10': '${"Total"}#{font=bold}',
                                'H10': '@{sum}#{font=bold;number_format=number}',
                                'I10': '@{sum}#{font=bold;number_format=number}',
                            }
                        }
                    }
                }
            </field>
        </record>

        # CD Receivable Confirmation
        <record id="xlsx_report_cd_receivable_confirmation" model="ir.attachment">
            <field name="res_model">xlsx.report.cd.receivable.confirmation</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_cd_receivable_confirmation.xlsx</field>
            <field name="name">CD Receivable Confirmation</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Receivable CD Confirmation Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}#{align=left;number_format=text}',
                                'B3': 'borrower_partner_ids${value and ", ".join([x.search_key for x in value]) or ""}#{align=left;number_format=text}',
                                'B4': 'partner_ids${value and ", ".join([x.search_key for x in value]) or ""}#{align=left;number_format=text}',
                                'B5': '${env.user.display_name}#{align=left;number_format=text}',
                                'B6': '${time.strftime("%d/%m/%Y")}#{align=left;number_format=date}',
                            },
                            'results': {
                                'A9': 'borrower_partner_id.search_key${value or ""}#{number_format=text}',
                                'B9': 'borrower_partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title.name, value.name]))) or ""}#{number_format=text}',
                                'C9': 'sale_id.name${value or ""}#{number_format=text}',
                                #'D9': 'supplier_invoice_id.payment_ids${value and ", ".join(list(set(filter(lambda l: l != False, [x.move_id.document_id._name == "account.voucher" and x.move_id.document_id.supplier_bank_id.bank.name or False for x in value])))) or ""}',
                                #'E9': 'supplier_invoice_id.payment_ids${value and ", ".join(list(set(filter(lambda l: l != False, [x.move_id.document_id._name == "account.voucher" and x.move_id.document_id.supplier_bank_id.bank_branch.name or False for x in value])))) or ""}',
                                'D9': 'bank_id${value and value.bank.name or ""}#{number_format=text}',
                                'E9': 'bank_id${value and value.bank_branch and value.bank_branch.name or ""}#{number_format=text}',
                                'F9': 'name${value or ""}#{number_format=text}',
                                'G9': 'sale_id.invoice_plan_ids${value and sum(value.filtered(lambda l: l.state in ["draft", "open"]).mapped("invoice_amount")) or ""}#{number_format=number}',
                            },
                            '_TAIL_0': {
                                'A9': '${"Total"}#{font=bold}',
                                'G9': '@{sum}#{font=bold;align=right;number_format=number}',
                            }
                        },
                    }
                }
            </field>
        </record>

        # CD Receivable Planning
        <record id="xlsx_report_cd_receivable_planning" model="ir.attachment">
            <field name="res_model">xlsx.report.cd.receivable.planning</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_cd_receivable_planning.xlsx</field>
            <field name="name">CD Receivable Planning</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Receivable CD Planning Detail Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'fiscalyear_start_id.name${value or ""}',
                                'D3': 'fiscalyear_end_id.name${value or ""}',
                                'B4': 'filter${value and dict(env["xlsx.report.cd.receivable.planning"]._columns["filter"].selection)[value] or ""}',
                                'B5': 'period_start_id.name${value or ""}',
                                'D5': 'period_end_id.name${value or ""}',
                                'B6': 'date_start${value or ""}#{number_format=date}',
                                'D6': 'date_end${value or ""}#{number_format=date}',
                                'B7': 'borrower_partner_ids${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.title.name, x.name]))) for x in value]) or ""}',
                                'B8': 'partner_ids${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.title.name, x.name]))) for x in value]) or ""}',
                                'B9': '${env.user.display_name}',
                                'B10': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A13': 'loan_agreement_id.name${value or ""}',
                                'B13': 'loan_agreement_id.sale_id.name${value or ""}',
                                'C13': 'invoice_plan_id.installment${value or ""}',
                                'D13': 'invoice_plan_id.date_invoice${value or ""}#{number_format=date}',
                                'E13': 'fiscalyear_name${value or ""}',
                                'F13': 'q1${value or 0}',
                                'G13': 'q2${value or 0}',
                                'H13': 'q3${value or 0}',
                                'I13': 'q4${value or 0}',
                                'J13': 'amount_total${value or 0}',
                            },
                            '_TAIL_0': {
                                'A13': '${"Total"}#{font=bold}',
                                'F13': '@{sum}#{font=bold;number_format=number}',
                                'G13': '@{sum}#{font=bold;number_format=number}',
                                'H13': '@{sum}#{font=bold;number_format=number}',
                                'I13': '@{sum}#{font=bold;number_format=number}',
                                'J13': '@{sum}#{font=bold;number_format=number}',
                            }
                        },
                        'Receivable CD Planning Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'fiscalyear_start_id.name${value or ""}',
                                'D3': 'fiscalyear_end_id.name${value or ""}',
                                'B4': 'filter${value and dict(env["xlsx.report.cd.receivable.planning"]._columns["filter"].selection)[value] or ""}',
                                'B5': 'period_start_id.name${value or ""}',
                                'D5': 'period_end_id.name${value or ""}',
                                'B6': 'date_start${value or ""}#{number_format=date}',
                                'D6': 'date_end${value or ""}#{number_format=date}',
                                'B7': 'borrower_partner_ids${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.title.name, x.name]))) for x in value]) or ""}',
                                'B8': 'partner_ids${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.title.name, x.name]))) for x in value]) or ""}',
                                'B9': '${env.user.display_name}',
                                'B10': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            '_BI_': {
                                'A13': {
                                    'df': 'Receivable CD Planning Detail Report',
                                    # Group by E and add Subtotal (so we use pivot)
                                    # By scripting, we need result = ...
                                    'oper_code': """
df = df[["E", "F", "G", "H", "I", "J"]]
groupby = ["E"]
sum_cols = ["F", "G", "H", "I", "J"]
result = pd.pivot_table(df, index=groupby,
                        values=sum_cols,
                        aggfunc=np.sum,
                        fill_value=0,
                        margins=True,
                        margins_name="Total")
                                    """,
                                },
                            },
                        },
                    }
                }
            </field>
        </record>

        # SLA Receipt
        <record id="xlsx_report_sla_receipt" model="ir.attachment">
            <field name="res_model">xlsx.report.sla.receipt</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_sla_receipt.xlsx</field>
            <field name="name">SLA Receipt</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'SLA Receipt Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'fiscalyear_start_id.name${value or ""}',
                                'D3': 'fiscalyear_end_id.name${value or ""}',
                                'B4': 'filter${value and dict(filter_no="No Filters", filter_date="Dates", filter_period="Periods")[value] or ""}',
                                'B5': 'period_start_id.name${value or ""}',
                                'D5': 'period_end_id.name${value or ""}',
                                'B6': 'date_start${value or ""}#{number_format=date}',
                                'D6': 'date_end${value or ""}#{number_format=date}',
                                'B7': 'user_ids${value and ", ".join([x.display_name for x in value]) or ""}',
                                'B8': '${env.user.display_name}',
                                'B9': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A12': 'name${value or ""}',
                                'B12': 'validate_user_id.display_name${value or ""}',
                                'C12': 'date_accept${value or ""}#{number_format=date}',
                                'D12': 'receipt_date${value or ""}#{number_format=date}',
                                'E12': 'business_day${value or 0}',
                                #'E12': '${"=NETWORKDAYS(?(C12),?(D12),Holliday!B:B)"}',
                                'F12': "${'=IF(?(E12)&lt;=2,1,0)'}",
                                'G12': "${'=IF(?(E12)=3,1,0)'}",
                                'H12': "${'=IF(?(E12)&gt;3,1,0)'}",
                            },
                            '_TAIL_0': {
                                'A12': '${"Total"}#{font=bold}',
                                'E12': '@{sum}#{font=bold;align=right}',
                                'F12': '@{sum}#{font=bold;align=right}',
                                'G12': '@{sum}#{font=bold;align=right}',
                                'H12': '@{sum}#{font=bold;align=right}',
                            }
                        }
                    }
                }
            </field>
        </record>

        # CD Receivable Balance Sheet Summary
        <record id="xlsx_report_cd_receivable_balance_sheet_summary" model="ir.attachment">
            <field name="res_model">xlsx.report.cd.receivable.balance.sheet.summary</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_cd_receivable_balance_sheet_summary.xlsx</field>
            <field name="name">CD Receivable Balance Sheet Summary</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Receivable CD Balance Sheet Summary Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'fiscalyear_start_id.name${value or ""}',
                                'D3': 'fiscalyear_end_id.name${value or ""}',
                                'B4': 'filter${value and dict(env["xlsx.report.cd.receivable.balance.sheet.summary"]._columns["filter"].selection)[value] or ""}',
                                'B5': 'period_start_id.name${value or ""}',
                                'D5': 'period_end_id.name${value or ""}',
                                'B6': 'date_start${value or ""}#{number_format=date}',
                                'D6': 'date_end${value or ""}#{number_format=date}',
                                'B7': 'partner_ids${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.title.name, x.name]))) for x in value]) or ""}',
                                'B8': 'mou_ids${value and ", ".join([x.name for x in value]) or ""}',
                                'B9': 'account_ids${value and ", ".join([x.code for x in value]) or ""}',
                                'B10': '${env.user.display_name}',
                                'B11': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A14': 'loan_agreement_id.borrower_partner_id.search_key${value or ""}',
                                'B14': 'loan_agreement_id.borrower_partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title.name, value.name]))) or ""}',
                                'C14': 'loan_agreement_id.mou_id.name${value or ""}',
                                'D14': 'loan_agreement_id.sale_id.name${value or ""}',
                                'E14': 'loan_agreement_id.bank_id.bank.name${value or ""}',
                                'F14': 'loan_agreement_id.bank_id.bank_branch.name${value or ""}',
                                'G14': 'loan_agreement_id.name${value or ""}',
                                'H14': 'brought_forward${value or ""}#{number_format=number}',
                                'I14': 'loan${value or ""}#{number_format=number}',
                                'J14': 'received${value or ""}#{number_format=number}',
                                'K14': 'outstanding${value or ""}#{number_format=number}',
                            },
                            '_TAIL_0': {
                                'A14': '${"Total"}#{font=bold}',
                                'H14': '@{sum}#{font=bold;number_format=number}',
                                'I14': '@{sum}#{font=bold;number_format=number}',
                                'J14': '@{sum}#{font=bold;number_format=number}',
                                'K14': '@{sum}#{font=bold;number_format=number}',
                            }
                        },
                    }
                }
            </field>
        </record>

        # CD Receivable Balance Sheet Detail
        <record id="xlsx_report_cd_receivable_balance_sheet_detail" model="ir.attachment">
            <field name="res_model">xlsx.report.cd.receivable.balance.sheet.detail</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_cd_receivable_balance_sheet_detail.xlsx</field>
            <field name="name">CD Receivable Balance Sheet Detail</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Receivable CD Balance Sheet Detail Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'fiscalyear_start_id.name${value or ""}',
                                'D3': 'fiscalyear_end_id.name${value or ""}',
                                'B4': 'filter${value and dict(env["xlsx.report.cd.receivable.balance.sheet.detail"]._columns["filter"].selection)[value] or ""}',
                                'B5': 'period_start_id.name${value or ""}',
                                'D5': 'period_end_id.name${value or ""}',
                                'B6': 'date_start${value or ""}#{number_format=date}',
                                'D6': 'date_end${value or ""}#{number_format=date}',
                                'B7': 'partner_ids${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.title.name, x.name]))) for x in value]) or ""}',
                                'B8': 'mou_ids${value and ", ".join([x.name for x in value]) or ""}',
                                'B9': 'account_ids${value and ", ".join([x.code for x in value]) or ""}',
                                'B10': '${env.user.display_name}',
                                'B11': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A14': 'partner_code${value or ""}',
                                'B14': 'partner_name${value or ""}',
                                'C14': 'mou${value or ""}',
                                'D14': 'brought_forward${value or ""}#{number_format=number}',
                                'E14': 'supplier_payment_number${value or ""}',
                                'F14': 'supplier_payment_posting_date${value or ""}#{number_format=date}',
                                'G14': 'supplier_payment_amount${value and (value != -1 and value or "0") or ""}#{number_format=number}',
                                'H14': 'installment${value or ""}',
                                'I14': 'customer_invoice_number${value or ""}',
                                'J14': 'customer_invoice_posting_date${value or ""}#{number_format=date}',
                                'K14': 'customer_invoice_amount${value and (value != -1 and value or "0") or ""}#{number_format=number}',
                                'L14': 'outstanding${value or ""}#{number_format=number}',
                            }
                        },
                    }
                }
            </field>
        </record>

        # Tax Exemption Report
        <record id="xlsx_report_tax_exemption_receipt" model="ir.attachment">
            <field name="res_model">xlsx.report.tax.exemption.receipt</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_tax_exemption_receipt.xlsx</field>
            <field name="name">Tax Exemption Report</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Tax Exemption Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'calendar_period_id.calendar_name${value or ""}',
                                'B4': 'taxbranch_id.name${value or ""}',
                                'B5': '${env.user.display_name}',
                                'B6': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A10': 'date_invoice${value or ""}#{number_format=date}',
                                'B10': 'number_preprint${value or ""}',
                                'C10': 'partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title.name, value.name]))) or ""}',
                                'D10': 'partner_id.vat${value or ""}#{number_format=text}',
                                'E10': 'partner_id.taxbranch${value and (value == "00000" and "Head Office" or value) or ""}',
                                'F10': 'amount_untaxed${value or ""}#{number_format=number}',
                                'G10': 'amount_tax${value or "-"}#{number_format=number}',
                                'H10': 'source_document_id${value and value._name == "sale.order" and value.workflow_process_id and value.workflow_process_id.name or ""}',
                                'I10': 'source_document_id${value and value._name == "sale.order" and value.workflow_process_id and value.name or ""}',
                                'J10': 'number${value or ""}',
                                'K10': 'document_origin${value or ""}',
                                'L10': 'validate_user_id.display_name${value or ""}',
                            },
                            '_TAIL_0': {
                                'A10': '${"Total"}#{font=bold}',
                                'F10': '@{sum}#{font=bold;number_format=number}',
                                'G10': '@{sum}#{font=bold;number_format=number}',
                            }
                        }
                    }
                }
            </field>
        </record>

        # Receivable Before Due
        <record id="xlsx_report_receivable_before_due" model="ir.attachment">
            <field name="res_model">xlsx.report.receivable.before.due</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_receivable_before_due.xlsx</field>
            <field name="name">Receivable Before Due Report</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Receivable Before Due Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'before_due_date${value or 0}',
                                'B4': 'date_due${value or ""}#{number_format=date}',
                                'B5': 'system_ids${value and ", ".join([x.name for x in value]) or ""}',
                                'B6': '${env.user.display_name}',
                                'B7': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A10': 'move_line_id.partner_id.search_key${value or ""}',
                                'B10': 'move_line_id.partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title.name, value.name]))) or ""}',
                                'C10': 'move_line_id.move_id.name${value or ""}',
                                'D10': 'move_line_id.move_id.date${value or ""}#{number_format=date}',
                                'E10': 'move_line_id.move_id.document_id${value and value._name == "interface.account.entry" and value.name or ""}',
                                'F10': 'move_line_id.move_id.document_id${value and value._name == "interface.account.entry" and value.system_id.name or ""}',
                                'G10': 'move_line_id.move_id.narration${value or ""}',
                                'H10': 'move_line_id${value and (value.credit != 0 and (-1) * value.credit or value.debit) or 0}#{number_format=number}',
                                'I10': 'move_line_id.move_id.validate_user_id.display_name${value or ""}',
                                'J10': 'move_line_id.move_id.validate_user_id.id${value and env["hr.employee"].search([("user_id", "=", value)]).section_id.code or ""}',
                                'K10': 'move_line_id.move_id.validate_user_id.id${value and env["hr.employee"].search([("user_id", "=", value)]).section_id.name or ""}',
                            },
                            '_TAIL_0': {
                                'H10': '@{sum}#{font=bold;align=right;number_format=number}',
                            }
                        }
                    }
                }
            </field>
        </record>

        # Receivable Detail Report
        <record id="xlsx_report_receivable_detail" model="ir.attachment">
            <field name="res_model">xlsx.report.receivable.detail</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_receivable_detail.xlsx</field>
            <field name="name">Receivable Detail Report</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Receivable Detail Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}#{align=left;number_format=text}',
                                'B3': 'account_ids${value and ", ".join([x.code for x in value]) or ""}#{align=left;number_format=text}',
                                'B4': 'partner_ids${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.title.name, x.name]))) for x in value]) or ""}#{align=left;number_format=text}',
                                'B5': 'fiscalyear_start_id.name${value or ""}#{align=left;number_format=text}',
                                'D5': 'fiscalyear_end_id.name${value or ""}#{align=left;number_format=text}',
                                'B6': 'filter${value and dict(env["xlsx.report.receivable.detail"]._columns["filter"].selection)[value] or ""}#{align=left;number_format=text}',
                                'B7': 'period_start_id.name${value or ""}#{align=left;number_format=text}',
                                'D7': 'period_end_id.name${value or ""}#{align=left;number_format=text}',
                                'B8': 'date_start${value or ""}#{align=left;number_format=date}',
                                'D8': 'date_end${value or ""}#{align=left;number_format=date}',
                                'B9': 'as_of_date${value or ""}#{align=left;number_format=date}',
                                'B10': 'period_length_days${value or ""}#{align=left}',
                                'B11': 'move_ids${value and ", ".join([x.name for x in value]) or ""}#{align=left;number_format=text}',
                                'B12': 'system_ids${value and ", ".join([x.name for x in value]) or ""}#{align=left;number_format=text}',
                                'B13': '${env.user.display_name}#{align=left;number_format=text}',
                                'B14': '${time.strftime("%d/%m/%Y")}#{align=left;number_format=date}',
                                'AH1': 'date_start_real${value or ""}#{number_format=date}',
                                'AH2': 'date_end_real${value or ""}#{number_format=date}',
                                'AH6': 'period_length_days${value}',
                                'AH7': 'period_length_days${value * 2}',
                                'AH8': 'period_length_days${value * 3}',
                                'AH9': 'period_length_days${value * 4}',
                            },
                            'results': {
                                'A17': 'partner_id.search_key${value or ""}#{number_format=text}',
                                'B17': 'partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title.name, value.name]))) or ""}#{number_format=text}',
                                'C17': 'move_id.name${value or ""}#{number_format=text}',
                                'D17': 'document_id${value and value._name == "interface.account.entry" and value.system_id.name or ""}#{number_format=text}',
                                'E17': 'document_id${value and value._name == "interface.account.entry" and value.name or ""}#{number_format=text}',
                                'F17': 'move_id.date_document${value or ""}#{number_format=date}',
                                'G17': 'date${value or ""}#{number_format=date}',
                                'H17': 'date_maturity${value or ""}#{number_format=date}',
                                'I17': "${'=IF(AND((?(X17)=\"Open\"), AND(?(H17)&lt;&gt;\"\",AH2&lt;&gt;\"\")),AH2-?(H17),\"\")'}",
                                'J17': "${'=IF(?(I17)&lt;&gt;\"\",IF(?(I17)&lt;=0,\"Not Due\",IF(AND(?(I17)&gt;=1,?(I17)&lt;=AH6),1&amp;\"-\"&amp;AH6&amp;\" Days\",IF(AND(?(I17)&gt;=AH6+1,?(I17)&lt;=AH7),AH6+1&amp;\"-\"&amp;AH7&amp;\" Days\",IF(AND(?(I17)&gt;=AH7+1,?(I17)&lt;=AH8),AH7+1&amp;\"-\"&amp;AH8&amp;\" Days\",IF(AND(?(I17)&gt;=AH8+1,?(I17)&lt;=AH9),AH8+1&amp;\"-\"&amp;AH9&amp;\" Days\",IF(?(I17)&gt;AH9,\"Over \"&amp;AH9&amp;\" Days\",\"\")))))),\"\")'}",
                                'K17': '${"=IF(?(M17)&lt;0,-1*?(AY17),?(AY17))"}#{number_format=number}',
                                'L17': '${"=IF(?(M17)&lt;0,-1*?(AZ17),?(AZ17))"}#{number_format=number}',
                                'M17': 'id${value and env["account.move.line"].browse(value).debit - env["account.move.line"].browse(value).credit or 0}#{number_format=number}',
                                'N17': 'currency_id.name${value or "THB"}#{number_format=text}',
                                'O17': 'invoice.tax_line${value and ", ".join(list(filter(lambda l: l != False, [x.tax_code_id.code for x in value]))) or ""}#{number_format=text}',
                                'P17': 'move_id.narration${value or ""}#{number_format=text}',
                                'Q17': 'move_id${value and value.document_id and (", ".join(list(filter(lambda l: l != False, [x.move_id.doctype == "receipt" and x.move_id.name or False for x in value.document_id.payment_ids]))) if value.document_id._name == "account.invoice" and value.id != value.document_id.cancel_move_id.id else value.document_id.to_payment if value.document_id._name == "interface.account.entry" else "") or ""}#{number_format=text}',
                                'R17': 'move_id${value and value.document_id and (", ".join(list(filter(lambda l: l != False, [x.move_id.doctype == "receipt" and x.move_id.date or False for x in value.document_id.payment_ids]))) if value.document_id._name == "account.invoice" and value.id != value.document_id.cancel_move_id.id else env["interface.account.entry"].search([("number", "=", value.document_id.to_payment)]).move_id.date if value.document_id._name == "interface.account.entry" else "") or ""}#{align=right;number_format=date}',
                                'S17': 'document_id${value and value._name == "interface.account.entry" and env["interface.account.entry"].search([("number", "=", value.to_payment)]).name or ""}#{number_format=text}',
                                'T17': 'move_id${value and value.document_id and (", ".join(list(filter(lambda l: l != False, [x.move_id.doctype == "receipt" and x.move_id.document_id and x.move_id.document_id._name == "account.voucher" and x.move_id.document_id.number_preprint or False for x in value.document_id.payment_ids]))) if value.document_id._name == "account.invoice" and value.id != value.document_id.cancel_move_id.id else env["interface.account.entry"].search([("number", "=", value.document_id.to_payment)]).preprint_number if value.document_id._name == "interface.account.entry" else "") or ""}#{number_format=text}',
                                'U17': 'id${value and env["account.move.line"].browse(value).move_id.document_id and (sum(list(filter(lambda l: l != False, [x.doctype == "receipt" and x.document_id and x.document_id._name == "account.voucher" and x.document_id.amount or 0 for x in env["account.move.line"].browse(value).move_id.document_id.payment_ids]))) if env["account.move.line"].browse(value).move_id.document_id._name == "account.invoice" and env["account.move.line"].browse(value).move_id.id != env["account.move.line"].browse(value).move_id.document_id.cancel_move_id.id else sum(env["interface.account.entry"].search([("number", "=", env["account.move.line"].browse(value).move_id.document_id.to_payment)]).line_ids.filtered(lambda l: l.account_id.code == env["account.move.line"].browse(value).account_id.code and l.name == env["account.move.line"].browse(value).name and l.id != value).mapped("credit")) - sum(env["interface.account.entry"].search([("number", "=", env["account.move.line"].browse(value).move_id.document_id.to_payment)]).line_ids.filtered(lambda l: l.account_id.code == env["account.move.line"].browse(value).account_id.code and l.name == env["account.move.line"].browse(value).name and l.id != value).mapped("debit")) if env["account.move.line"].browse(value).move_id.document_id._name == "interface.account.entry" else "") or ""}#{number_format=number}',
                                'V17': 'reconcile_id.name${value or ""}#{number_format=text}',
                                'W17': 'move_id${value and value.document_id and value.document_id._name == "interface.account.entry" and value.document_id.validate_user_id.display_name or value.create_uid.display_name}#{number_format=text}',
                                'X17': "${'=IF(?(V17)=\"\",\"Open\",\"Paid\")'}",
                                'AY17': 'invoice.amount_untaxed${value and abs(value) or 0}#{number_format=number}',
                                'AZ17': 'invoice.amount_tax${value and abs(value) or 0}#{number_format=number}',
                            },
                            '_TAIL_0': {
                                'A17': '${"Total"}#{font=bold}',
                                'K17': '@{sum}#{font=bold;number_format=number}',
                                'L17': '@{sum}#{font=bold;number_format=number}',
                                'M17': '@{sum}#{font=bold;number_format=number}',
                                'U17': '@{sum}#{font=bold;number_format=number}',
                            }
                        }
                    }
                }
            </field>
        </record>

        # Registrar of Guarantee Report
        <record id="xlsx_report_registrar_of_guarantee" model="ir.attachment">
            <field name="res_model">xlsx.report.registrar.of.guarantee</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_registrar_of_guarantee.xlsx</field>
            <field name="name">Registrar of Guarantee Report</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Registrar of Guarantee Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'fiscalyear_start_id.name${value or ""}',
                                'D3': 'fiscalyear_end_id.name${value or ""}',
                                'B4': 'filter${value and dict(filter_no="No Filters", filter_date="Dates", filter_period="Periods")[value] or ""}',
                                'B5': 'period_start_id.name${value or ""}',
                                'D5': 'period_end_id.name${value or ""}',
                                'B6': 'date_start${value or ""}#{number_format=date}',
                                'D6': 'date_end${value or ""}#{number_format=date}',
                                'B7': 'reconcile_cond${value and dict(all="All", open_item="Open Items", reconciled="Reconciled")[value] or ""}',
                                'B8': 'account_code${value or ""}',
                                'B9': '${env.user.display_name}',
                                'B10': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A13': 'invoice_move_line_id.org_id.name_short${value or ""}',
                                'B13': 'invoice_move_line_id.period_id.fiscalyear_id.name${value or ""}',
                                'C13': 'invoice_move_line_id.move_id.name${value or ""}',
                                'D13': 'invoice_move_line_id.move_id.date_document${value or ""}#{number_format=date}',
                                'E13': 'invoice_move_line_id.move_id.date${value or ""}#{number_format=date}',
                                'F13': 'invoice_move_line_id.move_id.document_id${value and value._name == "interface.account.entry" and value.system_id.name or ""}',
                                'G13': 'invoice_move_line_id.move_id.document_id${value and value._name == "interface.account.entry" and value.name or ""}',
                                'H13': 'invoice_move_line_id.partner_id.search_key${value or ""}',
                                'I13': 'invoice_move_line_id.partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title.name, value.name]))) or ""}',
                                'J13': 'voucher_move_line_id.move_id.narration${value or ""}',
                                'K13': 'invoice_move_line_id.move_id.document_id${value and value._name == "interface.account.entry" and value.line_ids[0].contract_number or ""}',
                                'L13': 'invoice_move_line_id.move_id.document_id${value and value._name == "interface.account.entry" and value.line_ids[0].contract_date_start or ""}#{number_format=date}',
                                'M13': 'invoice_move_line_id.move_id.document_id${value and value._name == "interface.account.entry" and value.line_ids[0].contract_date_end or ""}#{number_format=date}',
                                'N13': '',
                                'O13': 'invoice_move_line_id${value and value.credit - value.debit or ""}#{number_format=number}',
                                'P13': 'voucher_move_line_id${value and value.debit - value.credit or ""}#{number_format=number}',
                                'Q13': 'voucher_move_line_id.move_id.name${value or ""}',
                                'R13': 'invoice_move_line_id.reconcile_id.name${value or ""}',
                                'S13': 'invoice_move_line_id.move_id.validate_user_id.display_name${value or ""}',
                                'T13': "${'=IF(?(R13)=\"\",\"Open\",\"Cleared\")'}",
                            }
                        }
                    }
                }
            </field>
        </record>

        # Revenue Ledger Report
        <record id="xlsx_report_revenue_ledger" model="ir.attachment">
            <field name="res_model">xlsx.report.revenue.ledger</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_revenue_ledger.xlsx</field>
            <field name="name">Revenue Ledger Report</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Revenue Ledger Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}#{align=left;number_format=text}',
                                'B3': 'account_ids${value and ", ".join([x.code for x in value]) or ""}#{align=left;number_format=text}',
                                'B4': 'chartfield_ids${value and ", ".join([x.code for x in value]) or ""}#{align=left;number_format=text}',
                                'B5': 'partner_ids${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.title.name, x.name]))) for x in value]) or ""}#{align=left;number_format=text}',
                                'B6': 'charge_type${value and dict(env["xlsx.report.revenue.ledger"]._columns["charge_type"].selection)[value] or ""}#{align=left;number_format=text}',
                                'B7': 'fiscalyear_start_id.name${value or ""}#{align=left;number_format=text}',
                                'D7': 'fiscalyear_end_id.name${value or ""}#{align=left;number_format=text}',
                                'B8': 'filter${value and dict(env["xlsx.report.revenue.ledger"]._columns["filter"].selection)[value] or ""}#{align=left;number_format=text}',
                                'B9': 'period_start_id.name${value or ""}#{align=left;number_format=text}',
                                'D9': 'period_end_id.name${value or ""}#{align=left;number_format=text}',
                                'B10': 'date_start${value or ""}#{align=left;number_format=date}',
                                'D10': 'date_end${value or ""}#{align=left;number_format=date}',
                                'B11': '${env.user.display_name}#{align=left;number_format=text}',
                                'B12': '${datetime.today().date()}#{align=left;number_format=date}',
                            },
                            'results': {
                                'A15': 'charge_type${value and dict(env["account.move.line"]._columns["charge_type"].selection)[value] or ""}#{number_format=text}',
                                'B15': 'org_id.name_short${value or ""}#{number_format=text}',
                                'C15': 'account_id.code${value or ""}#{number_format=text}',
                                'D15': 'account_id.name${value or ""}#{number_format=text}',
                                'E15': 'activity_group_id.code${value or ""}#{number_format=text}',
                                'F15': 'activity_group_id.name${value or ""}#{number_format=text}',
                                'G15': 'activity_rpt_id.code${value or ""}#{number_format=text}',
                                'H15': 'activity_rpt_id.name${value or ""}#{number_format=text}',
                                'I15': 'activity_id.code${value or ""}#{number_format=text}',
                                'J15': 'activity_id.name${value or ""}#{number_format=text}',
                                'K15': 'period_id.fiscalyear_id.name${value or ""}#{number_format=text}',
                                'L15': 'period_id.code${value and ((int(value.split("/")[0])&gt;=1 and int(value.split("/")[0])&lt;=12) and value.split("/")[0] or "12") or ""}#{number_format=text}',
                                'M15': 'period_id.name${value or ""}#{number_format=text}',
                                'N15': 'tax_code_id.code${value or ""}#{number_format=text}',
                                'O15': 'id${value and env["account.move.line"].browse(value).debit-env["account.move.line"].browse(value).credit or ""}#{number_format=number}',
                                'P15': 'name${value or ""}#{number_format=text}',
                                'Q15': 'move_id.narration${value or ""}#{number_format=text}',
                                'R15': 'prefix_doctype${value or ""}#{number_format=text}',
                                'S15': 'journal_id.name${value or ""}#{number_format=text}',
                                'T15': 'document_id${value and value._name == "interface.account.entry" and value.number or ""}#{number_format=text}',
                                'U15': 'move_id.name${value or ""}#{number_format=text}',
                                'V15': 'docline_seq${value or ""}',
                                'W15': 'move_id.date_document${value or ""}#{number_format=date}',
                                'X15': 'move_id.date${value or ""}#{number_format=date}',
                                'Y15': 'invoice.payment_ids${value and ", ".join([l.move_id.name for l in value]) or ""}#{number_format=text}',
                                'Z15': 'invoice.payment_ids${value and ", ".join([datetime.strptime(l.move_id.date, "%Y-%m-%d").strftime("%d/%m/%Y") for l in value]) or ""}#{align=right;number_format=date}',
                                'AA15': 'invoice.source_document_id${value and value.display_name or ""}#{number_format=text}',
                                'AB15': 'move_id.ref${value or ""}#{number_format=text}',
                                'AC15': 'move_id.id${value and env["interface.account.entry"].search([("move_id", "=", value)]).name or ""}#{number_format=text}',
                                'AD15': 'move_id.id${value and env["interface.account.entry"].search([("move_id", "=", value)]).system_id.name or ""}#{number_format=text}',
                                'AE15': 'fund_id.name${value or ""}#{number_format=text}',
                                'AF15': 'chartfield_id.code${value or ""}#{number_format=text}',
                                'AG15': 'chartfield_id.name${value or ""}#{number_format=text}',
                                'AH15': 'cost_control_type_id.code${value or ""}#{number_format=text}',
                                'AI15': 'cost_control_type_id.name${value or ""}#{number_format=text}',
                                'AJ15': 'cost_control_id.code${value or ""}#{number_format=text}',
                                'AK15': 'cost_control_id.name${value or ""}#{number_format=text}',
                                'AL15': 'costcenter_id.code${value or ""}#{number_format=text}',
                                'AM15': 'costcenter_id.name${value or ""}#{number_format=text}',
                                'AN15': 'project_id.master_plan_id.code${value or ""}#{number_format=text}',
                                'AO15': 'project_id.master_plan_id.name${value or ""}#{number_format=text}',
                                'AP15': 'mission_id.name${value or ""}#{number_format=text}',
                                'AQ15': 'move_id${value and value.document_id and value._name == "interface.account.entry" and value.validate_user_id.display_name or value.create_uid.display_name}#{number_format=text}',
                                'AR15': 'move_id.line_id${value and value.mapped("date_maturity") and value.mapped("date_maturity")[0] or ""}#{number_format=date}',
                                'AS15': 'invoice.payment_ids${value and ", ".join(list(filter(lambda l: l != False, [l.document_id and "date_value" in l.document_id and datetime.strptime(l.document_id.date_value, "%Y-%m-%d").strftime("%d/%m/%Y") or "" for l in value]))) or ""}#{align=right;number_format=date}',
                                'AT15': 'move_id${value and (value.document_id and "cancel_move_id" in value.document_id._columns.keys() and value.document_id.cancel_move_id and (value.name != value.document_id.cancel_move_id.name and value.document_id.cancel_move_id.name or value.document_id.move_id.name) or "") or ""}#{number_format=text}',
                                'AU15': 'move_id${value and (value.document_id and "cancel_move_id" in value.document_id._columns.keys() and value.document_id.cancel_move_id and (value.name != value.document_id.cancel_move_id.name and value.document_id.cancel_move_id.date or value.document_id.move_id.date) or "") or ""}#{number_format=date}',
                                'AV15': 'document_id${value and "payment_term" in value._columns.keys() and value.payment_term.name or ""}#{number_format=text}',
                                'AW15': 'invoice.payment_ids${value and ", ".join(list(filter(lambda l: l != False, [l.document_id and "receipt_type" in l.document_id and l.document_id.receipt_type and dict(env[l.document_id._name]._columns["receipt_type"].selection)[l.document_id.receipt_type] or "" for l in value]))) or ""}#{number_format=text}',
                                'AX15': "${'=IF(AND(?(AO15)&lt;&gt;\"\",B12&lt;&gt;\"\"),?(AO15)-B12,\"\")'}",
                                'AY15': 'id${value and env["pabi.partner.dunning.letter.line"].search([("move_line_id", "=", value)]).letter_id.date_run or ""}#{number_format=date}',
                                'AZ15': 'id${value and env["pabi.partner.dunning.letter.line"].search([("move_line_id", "=", value)]).letter_id.letter_type and dict(env["pabi.partner.dunning.letter.line"]._columns["letter_type"].selection)[env["pabi.partner.dunning.letter.line"].search([("move_line_id", "=", value)]).letter_id.letter_type] or ""}#{number_format=date}',
                                'BA15': 'invoice.payment_ids${value and ", ".join(list(filter(lambda l: l != False, [l.document_id and "number_preprint" in l.document_id and l.document_id.number_preprint or "" for l in value]))) or ""}#{number_format=text}',
                                'BB15': 'invoice.source_document_id${value and value._name == "sale.order" and value.workflow_process_id and value.name or ""}#{number_format=text}',
                                'BC15': 'partner_id.search_key${value or ""}#{number_format=text}',
                                'BD15': 'partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title.name, value.name]))) or ""}#{number_format=text}',
                            },
                            '_TAIL_0': {
                                'A15': '${"Total"}#{font=bold}',
                                'L15': '@{sum}#{font=bold;number_format=number}',
                            }
                        }
                    }
                }
            </field>
        </record>

        # Expense Ledger Report
        <record id="xlsx_report_expense_ledger" model="ir.attachment">
            <field name="res_model">xlsx.report.expense.ledger</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_expense_ledger.xlsx</field>
            <field name="name">Expense Ledger Report</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Expense Ledger Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}#{align=left;number_format=text}',
                                'B3': 'account_ids${value and ", ".join([x.code for x in value]) or ""}#{align=left;number_format=text}',
                                'B4': 'chartfield_ids${value and ", ".join([x.code for x in value]) or ""}#{align=left;number_format=text}',
                                'B5': 'partner_ids${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.title.name, x.name]))) for x in value]) or ""}#{align=left;number_format=text}',
                                'B6': 'charge_type${value and dict(env["xlsx.report.expense.ledger"]._columns["charge_type"].selection)[value] or ""}#{align=left;number_format=text}',
                                'B7': 'fiscalyear_start_id.name${value or ""}#{align=left;number_format=text}',
                                'D7': 'fiscalyear_end_id.name${value or ""}#{align=left;number_format=text}',
                                'B8': 'filter${value and dict(env["xlsx.report.expense.ledger"]._columns["filter"].selection)[value] or ""}#{align=left;number_format=text}',
                                'B9': 'period_start_id.name${value or ""}#{align=left;number_format=text}',
                                'D9': 'period_end_id.name${value or ""}#{align=left;number_format=text}',
                                'B10': 'date_start${value or ""}#{align=left;number_format=date}',
                                'D10': 'date_end${value or ""}#{align=left;number_format=date}',
                                'B11': '${env.user.display_name}#{align=left;number_format=text}',
                                'B12': '${datetime.today().date()}#{align=left;number_format=date}',
                            },
                            'results': {
                                'A15': 'charge_type${value and dict(env["account.move.line"]._columns["charge_type"].selection)[value] or ""}#{number_format=text}',
                                'B15': 'org_id.name_short${value or ""}',
                                'C15': 'account_id.code${value or ""}#{number_format=text}',
                                'D15': 'account_id.name${value or ""}#{number_format=text}',
                                'E15': 'activity_group_id.code${value or ""}#{number_format=text}',
                                'F15': 'activity_group_id.name${value or ""}#{number_format=text}',
                                'G15': 'activity_rpt_id.code${value or ""}',
                                'H15': 'activity_rpt_id.name${value or ""}',
                                'I15': 'activity_id.code${value or ""}#{number_format=text}',
                                'J15': 'activity_id.name${value or ""}#{number_format=text}',
                                'K15': 'period_id.fiscalyear_id.name${value or ""}#{number_format=text}',
                                'L15': 'period_id.code${value and ((int(value.split("/")[0])&gt;=1 and int(value.split("/")[0])&lt;=12) and value.split("/")[0] or "12") or ""}#{number_format=text}',
                                'M15': 'period_id.name${value or ""}#{number_format=text}',
                                'N15': 'tax_code_id.code${value or ""}#{number_format=text}',
                                'O15': 'id${value and env["account.move.line"].browse(value).debit-env["account.move.line"].browse(value).credit or ""}#{number_format=number}',
                                'P15': 'name${value or ""}#{number_format=text}',
                                'Q15': 'move_id.narration${value or ""}#{number_format=text}',
                                'R15': 'prefix_doctype${value or ""}#{number_format=text}',
                                'S15': 'journal_id.name${value or ""}#{number_format=text}',
                                'T15': 'move_id.name${value or ""}#{number_format=text}',
                                'U15': 'docline_seq${value or ""}#{number_format=text}',
                                'V15': 'move_id.date_document${value or ""}#{number_format=date}',
                                'W15': 'move_id.date${value or ""}#{number_format=date}',
                                'X15': 'invoice.payment_ids${value and ", ".join([l.move_id.name for l in value]) or ""}#{number_format=text}',
                                'Y15': 'invoice.payment_ids${value and ", ".join([datetime.strptime(l.move_id.date, "%Y-%m-%d").strftime("%d/%m/%Y") for l in value]) or ""}#{align=right;number_format=date}',
                                'Z15': 'invoice.source_document_id${value and value.display_name or ""}#{number_format=text}',
                                'AA15': 'fund_id.name${value or ""}#{number_format=text}',
                                'AB15': 'chartfield_id.code${value or ""}#{number_format=text}',
                                'AC15': 'chartfield_id.name${value or ""}#{number_format=text}',
                                'AD15': 'cost_control_type_id.code${value or ""}#{number_format=text}',
                                'AE15': 'cost_control_type_id.name${value or ""}#{number_format=text}',
                                'AF15': 'cost_control_id.code${value or ""}#{number_format=text}',
                                'AG15': 'cost_control_id.name${value or ""}#{number_format=text}',
                                'AH15': 'costcenter_id.code${value or ""}#{number_format=text}',
                                'AI15': 'costcenter_id.name${value or ""}#{number_format=text}',
                                'AJ15': 'project_id.master_plan_id.code${value or ""}#{number_format=text}',
                                'AK15': 'project_id.master_plan_id.name${value or ""}#{number_format=text}',
                                'AL15': 'mission_id.name${value or ""}#{number_format=text}',
                                'AM15': 'move_id${value and value.document_id and value._name == "interface.account.entry" and value.validate_user_id.display_name or value.create_uid.display_name}#{number_format=text}',
                                'AN15': 'move_id.line_id${value and value.mapped("date_maturity") and value.mapped("date_maturity")[0] or ""}#{number_format=date}',
                                'AO15': 'move_id${value and (value.document_id and "cancel_move_id" in value.document_id._columns.keys() and value.document_id.cancel_move_id and (value.name != value.document_id.cancel_move_id.name and value.document_id.cancel_move_id.name or value.document_id.move_id.name) or "") or ""}#{number_format=text}',
                                'AP15': 'move_id${value and (value.document_id and "cancel_move_id" in value.document_id._columns.keys() and value.document_id.cancel_move_id and (value.name != value.document_id.cancel_move_id.name and value.document_id.cancel_move_id.date or value.document_id.move_id.date) or "") or ""}#{number_format=date}',
                                'AQ15': 'document_id${value and "payment_term" in value._columns.keys() and value.payment_term.name or ""}#{number_format=text}',
                                'AR15': 'document_id${value and "purchase_billing_id" in value._columns.keys() and value.purchase_billing_id.name or ""}#{number_format=text}',
                                'AS15': 'invoice.payment_ids${value and ", ".join(list(filter(lambda l: l != False, [x.move_id.journal_id.name for x in value]))) or ""}#{number_format=text}',
                                'AT15': 'invoice.payment_ids${value and ", ".join(list(filter(lambda l: l != False, [x.move_id.document_id._name == "account.voucher" and x.move_id.document_id.transfer_type and dict(env["account.voucher"]._columns["transfer_type"].selection)[x.move_id.document_id.transfer_type] or "Cheque" for x in value]))) or ""}#{number_format=text}',
                                'AU15': 'invoice.payment_ids${value and ", ".join(list(filter(lambda l: l != False, [x.move_id.document_id._name == "account.voucher" and x.move_id.document_id.date_value or False for x in value]))) or ""}#{number_format=date}',
                                'AV15': 'invoice.payment_ids${value and ", ".join(list(filter(lambda l: l != False, [x.move_id.document_id._name == "account.voucher" and x.move_id.document_id.supplier_bank_id.acc_number or False for x in value]))) or ""}#{number_format=text}',
                                'AW15': 'invoice.payment_ids${value and ", ".join(list(filter(lambda l: l != False, [x.move_id.document_id._name == "account.voucher" and x.move_id.document_id.supplier_bank_id.bank_branch.name or False for x in value]))) or ""}#{number_format=text}',
                                'AX15': 'invoice.payment_ids${value and ", ".join(list(filter(lambda l: l != False, [x.move_id.document_id._name == "account.voucher" and x.move_id.document_id.payment_export_id.name or False for x in value]))) or ""}#{number_format=text}',
                                'AY15': "${'=IF(AND(B12&lt;&gt;\"\",?(AN15)&lt;&gt;\"\"), ?(AN15)-B12,\"\")'}",
                                'AZ15': 'partner_id.search_key${value or ""}#{number_format=text}',
                                'BA15': 'partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title.name, value.name]))) or ""}#{number_format=text}',
                            },
                            '_TAIL_0': {
                                'A15': '${"Total"}#{font=bold}',
                                'L15': '@{sum}#{font=bold;number_format=number}',
                            }
                        }
                    }
                }
          </field>
      </record>

       # Allowance for Doubtful Accounts Report
       <record id="xlsx_report_gl_allowance_doubtful_accounts" model="ir.attachment">
           <field name="res_model">xlsx.report.gl.allowance.doubtful.accounts</field>
           <field name="datas"></field>
           <field name="datas_fname">xlsx_report_gl_allowance_doubtful_accounts.xlsx</field>
           <field name="name">GL Allowance for Doubtful Accounts Report</field>
           <field name="parent_id" eval="ref('dir_account_reports')"/>
           <field name="description">
               {
                   '__EXPORT__': {
                       'Allowance for Doubtful Accounts Report': {
                           '_HEAD_': {
                               'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                               'B3': 'allowance_for_doubtful_account_code${value and value + " ค่าเผื่อหนี้สงสัยจะสูญ-ลูกหนี้การค้า" or ""}',
                               'B4': 'date_report${value or ""}#{number_format=date}',
                               'B5': '${env.user.display_name}',
                               'B6': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                           },
                           'results': {
                               'A9': 'move_id${value and value.name or ""}',
                               'B9': 'move_id${value and value.date or ""}#{number_format=date}',
                               'C9': 'name${value or ""}',
                               'D9': 'move_id${value and value.ref or ""}',
                               'E9': 'id${value and (env["account.move.line"].browse(value).debit - env["account.move.line"].browse(value).credit) or ""}#{number_format=number}',
                           },
                           '_TAIL_0': {
                               'A9': '${"Total"}#{font=bold}',
                               'E9': '@{sum}#{font=bold;number_format=number}',
                           }
                       }
                   }
               }
           </field>
       </record>

      # GL Expenditure
     <record id="xlsx_report_gl_expenditure" model="ir.attachment">
        <field name="res_model">xlsx.report.gl.expenditure</field>
        <field name="datas"></field>
        <field name="datas_fname">xlsx_report_gl_expenditure.xlsx</field>
        <field name="name">GL Expenditure</field>
        <field name="description">
            {
                '__EXPORT__': {
                    'Expenditure Report': {
                        '_HEAD_': {
                            'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                            'B3': 'fiscalyear_start_id.name${value or ""}',
                            'D3': 'fiscalyear_end_id.name${value or ""}',
                            'B4': 'filter${value and dict(env["xlsx.report.gl.expenditure"]._columns["filter"].selection)[value] or ""}',
                            'B5': 'period_start_id.name${value or ""}',
                            'D5': 'period_end_id.name${value or ""}',
                            'B6': 'date_start${value or ""}#{number_format=date}',
                            'D6': 'date_end${value or ""}#{number_format=date}',
                            'B7': 'account_type_id.name${value or ""}',
                            'B8': 'account_ids${value and ", ".join([x.code for x in value]) or ""}',
                            'B9': 'activity_group_ids${value and ", ".join([x.code for x in value]) or ""}',
                            'B10': 'activity_ids${value and ", ".join([x.code for x in value]) or ""}',
                            'B11': 'chart_view${value and dict(env["xlsx.report.gl.expenditure"]._columns["chart_view"].selection)[value] or ""}',
                            'B12': 'org_ids${value and ", ".join([x.code for x in value]) or ""}',
                            'B13': 'invest_asset_ids${value and ", ".join([x.code for x in value]) or ""}',
                            'B14': 'section_ids${value and ", ".join([x.code for x in value]) or ""}',
                            'B15': 'fund_ids${value and ", ".join([x.code for x in value]) or ""}',
                            'B16': 'project_ids${value and ", ".join([x.code for x in value]) or ""}',
                            'B17': 'invest_construction_ids${value and ", ".join([x.code for x in value]) or ""}',
                            'B18': '${env.user.display_name}',
                            'B19': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                         },
                        'results': {
                            'A22': 'charge_type${value and dict(env["pabi.common.account.report.view"]._columns["charge_type"].selection)[value] or ""}',
                            'B22': 'budget_fund_rule_line_id.expense_group_id.name${value or ""}',
                            'C22': 'account_id.code${value or ""}',
                            'D22': 'account_id.name${value or ""}',
                            'E22': 'activity_group_id.code${value or ""}',
                            'F22': 'activity_group_id.name${value or ""}',
                            'G22': 'activity_id.code${value or ""}',
                            'H22': 'activity_id.name${value or ""}',
                            'I22': 'invoice_move_line_id.product_id.name${value or ""}',
                            'J22': 'period_id.fiscalyear_id.name${value or ""}',
                            'K22': "${'=IF(AND(VALUE(LEFT(?(L22),2))&gt;=1,VALUE(LEFT(?(L22),2))&lt;=12),LEFT(?(L22),2),12)'}",
                            'L22': 'period_id.name${value or ""}',
                            'M22': 'invoice_move_line_id.invoice.tax_line${value and value.tax_code_id.code or ""}',
                            'N22': 'budget_fund_rule_line_id.amount_init${value or ""}#{number_format=number}',
                            'O22': 'budget_fund_rule_line_id.amount${value or ""}#{number_format=number}',
                            'P22': 'invoice_move_line_id${value and value.debit - value.credit or 0}#{number_format=number}',
                            'Q22': 'invoice_move_line_id${value and (value.debit - value.credit &lt; 0 and (-1) * abs(value.invoice.tax_line.amount) or abs(value.invoice.tax_line.amount)) or ""}#{number_format=number}',
                            'R22': '${"=?(P22)+?(Q22)"}#{number_format=number}',
                            'S22': 'invoice_move_line_id${value and (value.debit - value.credit &lt; 0 and (-1) * abs(value.invoice.tax_line.base) or abs(value.invoice.tax_line.base)) or ""}#{number_format=number}',
                            'T22': 'id${value and sum(env["pabi.common.account.report.view"].browse(value).voucher_id.tax_line_wht.filtered(lambda l: l.invoice_id.id == env["pabi.common.account.report.view"].browse(value).invoice_id.id).mapped("amount")) or ""}',
                            #'T22': 'voucher_id.tax_line_wht${value and value.amount or ""}#{number_format=number}',
                            'U22': 'move_line_name${value or ""}',
                            'V22': 'invoice_narration${value or ""}',
                            'W22': 'invoice_move_line_id.prefix_doctype${value or ""}',
                            'X22': 'journal_id.name${value or ""}',
                            'Y22': 'document_number${value or ""}',
                            'Z22': 'docline_seq${value or ""}',
                            'AA22': 'invoice_document_date${value or ""}#{number_format=date}',
                            'AB22': 'invoice_posting_date${value or ""}#{number_format=date}',
                            'AC22': 'voucher_number${value or ""}',
                            'AD22': 'voucher_posting_date${value or ""}#{number_format=date}',
                            'AE22': 'source_document_id${value and (value._name in ("purchase.order", "sale.order") and value.name or value.number) or ""}',
                            'AF22': 'fund_id.name${value or ""}',
                            'AG22': 'project_id${value and value.project_type_id.name or ""}',
                            'AH22': 'budget${value and value.code or ""}',
                            'AI22': 'budget${value and value.name or ""}',
                            'AJ22': 'project_id.master_plan_id.code${value or ""}',
                            'AK22': 'project_id.master_plan_id.name${value or ""}',
                            'AL22': 'mission_id.name${value or ""}',
                            'AM22': 'invoice_move_line_id.program_id.code${value or ""}',
                            'AN22': 'invoice_move_line_id.program_id.name${value or ""}',
                            'AO22': 'invoice_move_line_id.program_id.section_program_id.code${value or ""}',
                            'AP22': 'invoice_move_line_id.program_id.section_program_id.name${value or ""}',
                            'AQ22': 'cost_control_type_id.code${value or ""}',
                            'AR22': 'cost_control_type_id.name${value or ""}',
                            'AS22': 'cost_control_id.code${value or ""}',
                            'AT22': 'cost_control_id.name${value or ""}',
                            'AU22': 'invoice_move_line_id.org_id.name_short${value or ""}',
                            'AV22': 'costcenter_id.code${value or ""}',
                            'AW22': 'costcenter_id.name${value or ""}',
                            'AX22': 'invoice_move_line_id.write_uid.display_name${value or ""}',
                            'AY22': 'invoice_move_line_id.invoice.date_due${value or ""}#{number_format=date}',
                            'AZ22': 'voucher_date_value${value or ""}#{number_format=date}',
                            'BA22': 'cancel_move_id.name${value or ""}',
                            'BB22': 'cancel_move_id.date${value or ""}#{number_format=date}',
                            'BC22': 'payment_term.name${value or ""}',
                            'BD22': 'purchase_billing_id.name${value or ""}',
                            'BE22': 'payment_method_id.name${value or ""}',
                            'BF22': 'voucher_id${value and (value.transfer_type and dict(env["pabi.common.account.report.view"]._columns["transfer_type"].selection)[value.transfer_type] or "Cheque") or ""}',
                            'BG22': 'supplier_bank_id.acc_number${value or ""}',
                            'BH22': 'supplier_bank_id.bank_branch.name${value or ""}',
                            'BI22': 'payment_export_id.name${value or ""}',
                            'BJ22': 'invoice_move_line_id.reconcile_id.name${value or ""}',
                        }
                    }
                }
            }
        </field>
     </record>

     # GL Project
    <record id="xlsx_report_gl_project" model="ir.attachment">
       <field name="res_model">xlsx.report.gl.project</field>
       <field name="datas"></field>
       <field name="datas_fname">xlsx_report_gl_project.xlsx</field>
       <field name="name">GL Project</field>
       <field name="description">
           {
               '__EXPORT__': {
                   'Project Report': {
                       '_HEAD_': {
                           'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}#{align=left;number_format=text}',
                           'B3': 'fiscalyear_start_id.name${value or ""}#{align=left;number_format=text}',
                           'D3': 'fiscalyear_end_id.name${value or ""}#{align=left;number_format=text}',
                           'B4': 'filter${value and dict(env["xlsx.report.gl.project"]._columns["filter"].selection)[value] or ""}#{align=left;number_format=text}',
                           'B5': 'period_start_id.name${value or ""}#{align=left;number_format=text}',
                           'D5': 'period_end_id.name${value or ""}#{align=left;number_format=text}',
                           'B6': 'date_start${value or ""}#{align=left;number_format=date}',
                           'D6': 'date_end${value or ""}#{align=left;number_format=date}',
                           'B7': 'account_type_id.name${value or ""}#{align=left;number_format=text}',
                           'B8': 'account_ids${value and ", ".join([x.code for x in value]) or ""}#{align=left;number_format=text}',
                           'B9': 'activity_group_ids${value and ", ".join([x.code for x in value]) or ""}#{align=left;number_format=text}',
                           'B10': 'activity_ids${value and ", ".join([x.code for x in value]) or ""}#{align=left;number_format=text}',
                           'B11': 'charge_type${value and dict(env["xlsx.report.gl.project"]._columns["charge_type"].selection)[value] or ""}#{align=left;number_format=text}',
                           'B12': 'chart_view${value and dict(env["xlsx.report.gl.project"]._columns["chart_view"].selection)[value] or ""}#{align=left;number_format=text}',
                           'B13': 'org_ids${value and ", ".join([x.code for x in value]) or ""}#{align=left;number_format=text}',
                           'B14': 'invest_asset_ids${value and ", ".join([x.code for x in value]) or ""}#{align=left;number_format=text}',
                           'B15': 'section_ids${value and ", ".join([x.code for x in value]) or ""}#{align=left;number_format=text}',
                           'B16': 'fund_ids${value and ", ".join([x.code for x in value]) or ""}#{align=left;number_format=text}',
                           'B17': 'project_ids${value and ", ".join([x.code for x in value]) or ""}#{align=left;number_format=text}',
                           'B18': 'invest_construction_ids${value and ", ".join([x.code for x in value]) or ""}#{align=left;number_format=text}',
                           'B19': '${env.user.display_name}#{align=left;number_format=text}',
                           'B20': '${time.strftime("%d/%m/%Y")}#{align=left;number_format=date}',
                        },
                        'results': {
                            'A23': 'charge_type${value and dict(env["account.move.line"]._columns["charge_type"].selection)[value] or ""}#{number_format=text}',
                            'B23': 'budget_fund_rule_line_id.expense_group_id.name${value or ""}#{number_format=text}',
                            'C23': 'account_id.code${value or ""}#{number_format=text}',
                            'D23': 'account_id.name${value or ""}#{number_format=text}',
                            'E23': 'activity_group_id.code${value or ""}#{number_format=text}',
                            'F23': 'activity_group_id.name${value or ""}#{number_format=text}',
                            'G23': 'activity_id.code${value or ""}#{number_format=text}',
                            'H23': 'activity_id.name${value or ""}#{number_format=text}',
                            'I23': 'product_id.name${value or ""}#{number_format=text}',
                            'J23': 'period_id.fiscalyear_id.name${value or ""}',
                            'K23': 'period_id.code${value and ((int(value.split("/")[0])&gt;=1 and int(value.split("/")[0])&lt;=12) and value.split("/")[0] or "12") or ""}#{number_format=text}',
                            'L23': 'period_id.name${value or ""}#{number_format=text}',
                            'M23': 'tax_code${value or ""}#{number_format=text}',
                            'N23': 'budget_fund_rule_line_id.amount_init${value or ""}#{number_format=number}',
                            'O23': 'budget_fund_rule_line_id.amount${value or ""}#{number_format=number}',
                            'P23': 'id${value and env["account.move.line"].browse(value).debit - env["account.move.line"].browse(value).credit or 0}#{number_format=number}',
                            'Q23': '${"=IF(?(P23)&lt;0,-1*?(BX23),?(BX23))"}#{number_format=number}',
                            'R23': '${"=?(P23)+?(Q23)"}#{number_format=number}',
                            'S23': '${"=IF(?(P23)&lt;0,-1*?(BY23),?(BY23))"}#{number_format=number}',
                            'T23': '${"=IF(?(P23)&lt;0,?(BZ23),-1*?(BZ23))"}#{number_format=number}',
                            #'T23': '${"=IF(?(P23)&lt;0,-1*?(BZ23),?(BZ23))"}#{number_format=number}',
                            'U23': 'name${value or ""}#{number_format=text}',
                            'V23': 'move_id.narration${value or ""}#{number_format=text}',
                            'W23': 'prefix_doctype${value or ""}#{number_format=text}',
                            'X23': 'move_id.journal_id.name${value or ""}#{number_format=text}',
                            'Y23': 'move_id.name${value or ""}#{number_format=text}',
                            'Z23': 'docline_seq${value or ""}#{number_format=text}',
                            'AA23': 'move_id.date_document${value or ""}#{number_format=date}',
                            'AB23': 'move_id.date${value or ""}#{number_format=date}',
                            'AC23': 'move_id${value and value.document_id and ((", ".join(list(filter(lambda l: l != False, [x.move_id.document_id and "bank_receipt_id" in x.move_id.document_id._columns.keys() and x.move_id.document_id.bank_receipt_id.name or False for x in value.document_id.payment_ids]))) if value.document_id.type in ("out_invoice", "out_refund") else (", ".join(list(filter(lambda l: l != False, [x.move_id.doctype == "payment" and x.move_id.name or False for x in value.document_id.payment_ids])))) if value.document_id.type in ("in_invoice", "in_refund") else "") if value.document_id._name == "account.invoice" and value.id != value.document_id.cancel_move_id.id else ", ".join([x.name for x in env["interface.account.entry"].search([("number", "=", value.document_id.to_payment)]).move_id.line_id.mapped("bank_receipt_id")]) if value.document_id._name == "interface.account.entry" and value.document_id.type == "invoice" else "") or ""}#{number_format=text}',
                            'AD23': 'move_id${value and value.document_id and ((", ".join(list(filter(lambda l: l != False, [x.move_id.document_id and "bank_receipt_id" in x.move_id.document_id._columns.keys() and x.move_id.document_id.bank_receipt_id.move_id.date or False for x in value.document_id.payment_ids]))) if value.document_id.type in ("out_invoice", "out_refund") else (", ".join(list(filter(lambda l: l != False, [x.move_id.doctype == "payment" and x.move_id.date or False for x in value.document_id.payment_ids])))) if value.document_id.type in ("in_invoice", "in_refund") else "") if value.document_id._name == "account.invoice" and value.id != value.document_id.cancel_move_id.id else ", ".join([x.move_id.date for x in env["interface.account.entry"].search([("number", "=", value.document_id.to_payment)]).move_id.line_id.mapped("bank_receipt_id")]) if value.document_id._name == "interface.account.entry" and value.document_id.type == "invoice" else "") or ""}#{align=right;number_format=date}',
                            'AE23': 'invoice.source_document_id${value and value.display_name or ""}#{number_format=text}',
                            'AF23': 'move_id.ref${value or ""}#{number_format=text}',
                            'AG23': 'fund_id.name${value or ""}#{number_format=text}',
                            'AH23': 'chartfield_id.type${value and dict(env["chartfield.view"]._columns["type"].selection)[value] or ""}#{number_format=text}',
                            'AI23': 'chartfield_id.code${value or ""}#{number_format=text}',
                            'AJ23': 'chartfield_id.name${value or ""}#{number_format=text}',
                            'AK23': 'project_id.master_plan_id.code${value or ""}#{number_format=text}',
                            'AL23': 'project_id.master_plan_id.name${value or ""}#{number_format=text}',
                            'AM23': 'mission_id.name${value or ""}#{number_format=text}',
                            'AN23': 'program_id.code${value or ""}#{number_format=text}',
                            'AO23': 'program_id.name${value or ""}#{number_format=text}',
                            'AP23': 'program_id.section_program_id.code${value or ""}#{number_format=text}',
                            'AQ23': 'program_id.section_program_id.name${value or ""}#{number_format=text}',
                            'AR23': 'cost_control_type_id.code${value or ""}#{number_format=text}',
                            'AS23': 'cost_control_type_id.name${value or ""}#{number_format=text}',
                            'AT23': 'cost_control_id.code${value or ""}#{number_format=text}',
                            'AU23': 'cost_control_id.name${value or ""}#{number_format=text}',
                            'AV23': 'org_id.name_short${value or ""}#{number_format=text}',
                            'AW23': 'costcenter_id.code${value or ""}#{number_format=text}',
                            'AX23': 'costcenter_id.name${value or ""}#{number_format=text}',
                            'AY23': 'move_id${value and value.document_id and value.document_id._name == "interface.account.entry" and value.validate_user_id.name or value.create_uid.name}#{number_format=text}',
                            'AZ23': 'move_id.line_id${value and value.mapped("date_maturity") and value.mapped("date_maturity")[0] or ""}#{number_format=date}',
                            'BA23': 'invoice.payment_ids${value and ", ".join(list(filter(lambda l: l != False, [x.move_id.document_id and x.move_id.document_id._name == "account.voucher" and x.move_id.document_id.date_value or False for x in value]))) or ""}#{number_format=date}',
                            'BB23': 'move_id${value and (value.document_id and "cancel_move_id" in value.document_id._columns.keys() and value.document_id.cancel_move_id and (value.name != value.document_id.cancel_move_id.name and value.document_id.cancel_move_id.name or value.document_id.move_id.name) or "") or ""}#{number_format=text}',
                            'BC23': 'move_id${value and (value.document_id and "cancel_move_id" in value.document_id._columns.keys() and value.document_id.cancel_move_id and (value.name != value.document_id.cancel_move_id.name and value.document_id.cancel_move_id.date or value.document_id.move_id.date) or "") or ""}#{number_format=date}',
                            'BD23': 'invoice.payment_term.name${value or ""}#{number_format=text}',
                            'BE23': 'invoice.purchase_billing_id.name${value or ""}#{number_format=text}',
                            'BF23': 'invoice.payment_ids${value and ", ".join(list(filter(lambda l: l != False, [x.move_id.journal_id.name for x in value]))) or ""}#{number_format=text}',
                            'BG23': 'invoice.payment_ids${value and ", ".join(list(filter(lambda l: l != False, [x.move_id.document_id and x.move_id.document_id._name == "account.voucher" and x.move_id.document_id.transfer_type and dict(env["account.voucher"]._columns["transfer_type"].selection)[x.move_id.document_id.transfer_type] or "Cheque" for x in value]))) or ""}#{number_format=text}',
                            'BH23': 'invoice.payment_ids${value and ", ".join(list(filter(lambda l: l != False, [x.move_id.document_id and x.move_id.document_id._name == "account.voucher" and x.move_id.document_id.supplier_bank_id.acc_number or False for x in value]))) or ""}#{number_format=text}',
                            'BI23': 'invoice.payment_ids${value and ", ".join(list(filter(lambda l: l != False, [x.move_id.document_id and x.move_id.document_id._name == "account.voucher" and x.move_id.document_id.supplier_bank_id.bank_branch.name or False for x in value]))) or ""}#{number_format=text}',
                            'BJ23': 'invoice.payment_ids${value and ", ".join(list(filter(lambda l: l != False, [x.move_id.document_id and x.move_id.document_id._name == "account.voucher" and x.move_id.document_id.payment_export_id.name or False for x in value]))) or ""}#{number_format=text}',
                            'BK23': 'reconcile_id.name${value or ""}#{number_format=text}',
                            'BL23': 'reconcile_partial_id.name${value or ""}#{number_format=text}',
                            'BM23': 'asset_id${value and value.code or ""}#{number_format=text}',
                            'BN23': 'asset_id${value and value.name or ""}#{number_format=text}',
                            #'BX23': 'move_id.tax_detail_ids${value and abs(sum(value.mapped("amount"))) or 0}#{number_format=number}',
                            'BX23': 'vat_amount${value or 0}#{number_format=number}',
                            #'BY23': 'move_id.invoice_ids.tax_line${value and abs(sum(value.mapped("base"))) or 0}#{number_format=number}',
                            #'BY23': 'move_id.tax_detail_ids${value and abs(sum(value.mapped("base"))) or 0}#{number_format=number}',
                            'BY23': 'base_amount${value or 0}#{number_format=number}',
                            'BZ23': 'invoice${value and abs(sum([x and x.document_id and "wht_cert_ids" in x.document_id._columns.keys() and x.document_id.wht_cert_ids and sum(x.document_id.wht_cert_ids[0].wht_line.filtered(lambda l: l.voucher_tax_id.invoice_id == value).mapped("amount")) or 0 for x in value.payment_ids])) or 0}#{number_format=number}', # Noted for WHT Amount
                        }
                   }
               }
           }
       </field>
    </record>

     # Assset Repair
     <record id="xlsx_report_asset_repair" model="ir.attachment">
         <field name="res_model">xlsx.report.asset.repair</field>
         <field name="datas"></field>
         <field name="datas_fname">xlsx_report_asset_repair.xlsx</field>
         <field name="name">Asset Repair Report</field>
         <field name="parent_id" eval="ref('dir_account_reports')"/>
         <field name="description">
             {
                 '__EXPORT__': {
                     'Asset Repair Report': {
                         '_HEAD_': {
                             'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                             'B3': 'org_id${value and value.name_short or ""}',
                             'B4': 'sector_id${value and value.name or ""}',
                             'B5': 'subsector_id${value and value.name or ""}',
                             'B6': 'division_id${value and value.name or ""}',
                             'B7': 'section_id${value and value.name or ""}',
                             'B8': 'asset_id${value and value.code or ""}',
                             'B9': 'responsible_by${value and value.name or ""}',
                             'B10': 'budget${value and value.name_short or ""}',
                             'B11': 'status_id${value and value.name or ""}',
                             'B12': 'as_of_date${value or ""}#{number_format=date}',
                             'B13': '${env.user.with_context(lang="th_TH").display_name}',
                             'B14': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                         },
                         'results': {
                             'A17': 'asset_id${value and value.code or ""}',
                             'B17': 'asset_id${value and value.name or ""}',
                             'C17': 'asset_id${value and value.purchase_value or ""}#{number_format=number}',
                             'D17': 'asset_repair_id${value and value.date or ""}#{number_format=date}',
                             'E17': 'purchase_order_id${value and value.name or ""}',
                             'F17': 'purchase_order_id${value and value.amount_total or ""}#{number_format=number}',
                             'G17': 'asset_repair_id${value and value.note or ""}',
                             'H17': 'asset_id${value and value.org_id.name_short or ""}',
                             'I17': 'budget${value and value.code or ""}',
                             'J17': 'budget${value and value.name_short or ""}',
                             'K17': 'costcenter_id${value and value.code or ""}',
                             'L17': 'costcenter_id${value and value.name or ""}',
                             'M17': 'responsible_user_id${value and value.login or ""}',
                             'N17': 'responsible_user_id${value and value.partner_id.with_context(lang="th_TH").display_name or ""}',
                             'O17': 'asset_id${value and value.status.name or ""}',
                         }
                     }
                 }
             }
         </field>
     </record>

     # Asset Register
     <record id="xlsx_report_asset_register" model="ir.attachment">
         <field name="res_model">asset.register.report</field>
         <field name="datas"></field>
         <field name="datas_fname">xlsx_report_asset_register.xlsx</field>
         <field name="name">Asset Register Report</field>
         <field name="parent_id" eval="ref('dir_account_reports')"/>
         <field name="description">
             {
                 '__EXPORT__': {
                     'Asset Register Report': {
                         '_HEAD_': {
                             'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}#{number_format=text}',
                             'B4': 'org_ids${value and ", ".join([x.name_short for x in value]) or ""}#{number_format=text}',
                             'B5': 'fiscalyear_start_id.name${value or ""}#{number_format=text}',
                             'D5': 'fiscalyear_end_id.name${value or ""}#{number_format=text}',
                             'B6': 'date_start${value or ""}#{number_format=date}',
                             'D6': 'date_end${value or ""}#{number_format=date}',
                             'B7': 'asset_profile_ids${value and ", ".join([x.name for x in value]) or ""}#{number_format=text}',
                             'B8': 'asset_ids${value and ", ".join([x.name for x in value]) or ""}#{number_format=text}',
                             'B9': 'account_ids${value and ", ".join([x.code for x in value]) or ""}#{number_format=text}',
                             'B10': 'responsible_person_ids${value and ", ".join([x.name for x in value]) or ""}#{number_format=text}',
                             'B11': 'building_ids${value and ", ".join([x.name for x in value]) or ""}#{number_format=text}',
                             'B12': 'floor_ids${value and ", ".join([x.name for x in value]) or ""}#{number_format=text}',
                             'B13': 'room_ids${value and ", ".join([x.name for x in value]) or ""}#{number_format=text}',
                             'B14': 'asset_state${value and ", ".join([x.name for x in value]) or ""}#{number_format=text}',
                             'B15': 'asset_status_ids${value and ", ".join([x.name for x in value]) or ""}#{number_format=text}',
                             'B16': 'budget${value and ", ".join([x.code for x in value]) or ""}#{number_format=text}',
                             'B17': 'owner_budget${value and ", ".join([x.code for x in value]) or ""}#{number_format=text}',
                             'B18': 'costcenter_ids${value and ", ".join([x.code for x in value]) or ""}#{number_format=text}',
                             'B19': 'division_ids${value and ", ".join([x.code for x in value]) or ""}#{number_format=text}',
                             'B20': 'sector_ids${value and ", ".join([x.code for x in value]) or ""}#{number_format=text}',
                             'B21': 'subsector_ids${value and ", ".join([x.code for x in value]) or ""}#{number_format=text}',
                             'B22': 'current_year${value and value.name or ""}#{number_format=text}',
                             'B23': '${env.user.with_context(lang="th_TH").display_name}',
                             'B24': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                         },
                         'results': {
                             'A27': 'owner_budget${value and value.org_id.name_short or ""}#{number_format=text}',
                             'B27': 'profile_id.product_categ_id${value and value.name or ""}#{number_format=text}',
                             'C27': 'account_code${value or ""}#{number_format=text}',
                             'D27': 'account_name${value or ""}#{number_format=text}',
                             'E27': 'profile_id${value and value.code or ""}#{number_format=text}',
                             'F27': 'profile_id${value and value.name or ""}#{number_format=text}',
                             'G27': 'code${value or ""}#{number_format=text}',
                             'H27': 'name${value or ""}#{number_format=text}',
                             'I27': 'parent_id${value and value.name or ""}#{number_format=text}',
                             'J27': 'product_id${value and value.name or ""}#{number_format=text}',
                             'K27': 'code2${value or ""}#{number_format=text}',
                             'L27': 'picking_id${value and value.acceptance_id and value.acceptance_id.date_accept or ""}#{number_format=date}',
                             'M27': 'date_start${value or ""}#{number_format=date}',
                             'N27': 'date_picking${value or ""}#{number_format=date}',
                             'O27': 'picking_id${value and value.name or ""}#{number_format=text}',
                             'P27': 'budget_type${value or ""}#{number_format=text}',
                             'Q27': 'budget${value and value.code or ""}#{number_format=text}',
                             'R27': 'budget${value and value.name or ""}#{number_format=text}',
                             'S27': 'owner_budget${value and value.code or ""}#{number_format=text}',
                             'T27': 'owner_budget${value and value.name or ""}#{number_format=text}',
                             'U27': 'owner_budget${value and value.costcenter_id.code or ""}#{number_format=text}',
                             'V27': 'owner_budget${value and value.costcenter_id.name or ""}#{number_format=text}',
                             'W27': 'owner_budget${value and ", ".join([x.name for x in value.fund_ids]) or ""}',
                             'X27': 'owner_section_id${value and value.division_id and value.division_id.name or ""}#{number_format=text}',
                             'Y27': 'owner_section_id${value and value.subsector_id and value.subsector_id.name or ""}#{number_format=text}',
                             'Z27': 'owner_section_id${value and value.sector_id and value.sector_id.name or ""}#{number_format=text}',
                             'AA27': 'building_id${value and value.name or ""}#{number_format=text}',
                             'AB27': 'floor_id${value and value.name or ""}#{number_format=text}',
                             'AC27': 'room_id${value and value.name or ""}#{number_format=text}',
                             'AD27': 'responsible_user_id${value and value.login or ""}#{number_format=text}',
                             'AE27': 'responsible_user_id${value and value.with_context(lang="th_TH").name or ""}#{number_format=text}',
                             'AF27': 'partner_id${value and value.search_key or ""}#{number_format=text}',
                             'AG27': 'partner_id${value and value.name or ""}#{number_format=text}',
                             'AH27': "${'=IF(?(BH27)&lt;&gt;\"\",?(BH27),IF(?(BI27)&lt;&gt;\"\",?(BI27),\"\"))'}",
                             'AI27': 'purchase_request_id${value and value.name or ""}#{number_format=text}',
                             'AJ27': 'asset_purchase_method_id${value and value.name or ""}#{number_format=text}',
                             'AK27': 'doc_request_id${value and value.name or ""}#{number_format=text}',
                             'AL27': 'doc_request_id${value and value.with_context(lang="th_TH").name or ""}#{number_format=text}',
                             'AM27': 'pr_requester_id${value and value.login or ""}#{number_format=text}',
                             'AN27': 'pr_requester_id${value and value.with_context(lang="th_TH").name or ""}#{number_format=text}',
                             'AO27': 'date_request${value or ""}#{number_format=date}',
                             'AP27': 'serial_number${value or ""}#{number_format=text}',
                             'AQ27': 'warranty_start_date${value or ""}#{number_format=date}',
                             'AR27': 'warranty_expire_date${value or ""}#{number_format=date}',
                             'AS27': 'date_start${value and env["account.fiscalyear"].browse(env["account.fiscalyear"].find(value)).name or ""}#{number_format=text}',
                             'AT27': 'purchase_before_current${value or 0}#{number_format=number}',
                             'AU27': 'purchase_current${value or 0}#{number_format=number}',
                             'AV27': 'purchase_value${value or 0}#{number_format=number}',
                             'AW27': 'accumulated_bf${value or 0}#{number_format=number}',
                             'AX27': 'depreciation${value or 0}#{number_format=number}',
                             'AY27': '${"=SUM(?(AW27):?(AX27))"}#{number_format=number}',
                             'AZ27': '${"=?(AV27)-?(AY27)"}#{number_format=number}',
                             'BA27': 'method_number${value or 0}#{number_format=text}',
                             'BB27': 'adjust_id${value and value.name or ""}#{number_format=text}',
                             'BC27': 'status${value and value.name or ""}#{number_format=text}',
                             'BD27': 'date_remove${value or ""}#{number_format=date}',
                             'BE27': 'state${value and ("running" if value == "open" else value) or ""}#{number_format=text}',
                             # Hide column
                             'BH27': 'purchase_id${value and value.name or ""}#{number_format=text}',
                             'BI27': 'adjust_id${value and value.ship_purchase_id.name or ""}#{number_format=text}',
                         }
                     },
                     'Accum. Depre. Group By GL': {
                         '_BI_': {
                             'A2': {
                                 'df': 'Asset Register Report',
                                 # Group by A, B, C, D, E, F and add Subtotal (so we use pivot)
                                 # By scripting, we need result = ...
                                 'oper_code': """
df = df[["C", "AT", "AU", "AV", "AW", "AX", "AY", "AZ"]]
groupby = ["C"]
sum_cols = ["AT", "AU", "AV", "AW", "AX", "AY", "AZ"]
result = pd.pivot_table(df, index=groupby,
                     values=sum_cols,
                     aggfunc=np.sum,
                     fill_value=0,
                     margins=True,
                     margins_name="Total")
                                 """,
                             },
                         },
                     }
                }
            }
         </field>
     </record>

     # PND1
     <record id="xlsx_report_pnd1" model="ir.attachment">
         <field name="res_model">xlsx.report.pnd1</field>
         <field name="datas"></field>
         <field name="datas_fname">xlsx_report_pnd1.xlsx</field>
         <field name="name">PND1</field>
         <field name="parent_id" eval="ref('dir_account_reports')"/>
         <field name="description">
            {
                '__EXPORT__': {
                    1: {
                        '_HEAD_': {
                        },
                        'results': {
                            'A1': "${'1'}",
                            'B1': '${"=ROW()"}',
                            'C1': 'partner_id.vat${value or ""}#{number_format=text}',
                            'D1': '${""}',
                            'E1': 'partner_id.title${value and value.name or ""}',
                            'F1': 'partner_id.name${value or ""}',
                            'G1': '${""}',
                            'H1': '${""}',
                            'I1': 'date${value or ""}#{number_format=date}',
                            'J1': 'amount_income${value or ""}',
                            'K1': 'amount_wht${value and -value or ""}',
                            'L1': '${"1"}',
                            'M1': 'wht_cert_income_type${value and value=="1" and "1" or (value=="2" and "4" or "")}',
                            'N1': 'voucher_id${value and value.number or ""}',
                         },
                     }
                 }
             }
         </field>
     </record>
     
        # PIT Detail
        <record id="xlsx_report_pit_detail" model="ir.attachment">
            <field name="res_model">xlsx.report.pit.detail</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_pit_detail.xlsx</field>
            <field name="name">PIT Detail</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Partner Detail Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'partner_type${value and dict(customer="Customer", supplier="Supplier", customer_and_supplier="Customer and Supplier", customer_or_supplier="Customer or Supplier")[value] or ""}',
                                'B4': 'active${value and dict(true="True", false="False")[value] or ""}',
                                'B5': 'category_ids${value and ", ".join([x.name for x in value]) or ""}',
                                'B6': 'partner_ids${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.title.name, x.name]))) for x in value]) or ""}',
                                'B7': '${env.user.display_name}',
                                'B8': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            
                            'income_tax_results': {   
                                'A11': 'id${value and (env["personal.income.tax"].browse(value).voucher_id.validate_user_id.partner_id.name or env["personal.income.tax"].browse(value).invoice_id.validate_user_id.partner_id.name) or ""}',
                                'B11': 'partner_id.search_key${value or ""}#{number_format=text}',   
                                'C11': 'partner_id.vat${value or ""}#{number_format=text}',
								'D11': 'partner_id.id${value and " ".join(list(filter(lambda l: l != False, [env["res.partner"].browse(value).title.name, env["res.partner"].browse(value).name]))) or ""}',
								'E11': 'partner_id.id${value and (env["res.partner"].browse(value).street or "")+" "+(env["res.partner"].browse(value).street2 or "")+" "+(env["res.partner"].browse(value).township_id.name or "")+" "+(env["res.partner"].browse(value).district_id.name or "")+" "+(env["res.partner"].browse(value).province_id.name or "")+" "+(env["res.partner"].browse(value).zip or "") or ""}',
                                'F11': 'partner_id.street${value or ""}',
                                'G11': 'partner_id.street2${value or ""}',
                                'H11': 'partner_id.township_id.name${value or ""}',
                                'I11': 'partner_id.district_id.name${value or ""}',
                                'J11': 'partner_id.province_id.name${value or ""}',
                                'K11': 'partner_id.zip${value or ""}#{number_format=text}',
                                'L11': 'id${value and (env["personal.income.tax"].browse(value).voucher_id.operating_unit_id.name or env["personal.income.tax"].browse(value).invoice_id.operating_unit_id.name) or ""}',
                                'M11': 'date${value and value.strftime("%d-%m-%Y") or ""}',                                           
                                'N11': 'voucher_id.number${value or ""}',
                                'O11': 'invoice_id.number${value or ""}',
                                'P11': 'amount_income${value or ""}',
                                'Q11': 'amount_wht${value or ""}',
                                'R11': 'calendar_year${value or ""}',
                                'S11': 'date${value and (value.strftime("%m")) or ""}#{number_format=text}',
                                'T11': 'wht_cert_income_type${value and dict(env["xlsx.report.pit.detail"]._columns["wht_cert_income_type"].selection)[value] or ""}',
                                'U11': 'posted${value or ""}',
                                'V11': 'id${value and (env["personal.income.tax"].browse(value).voucher_id.move_id.line_item_summary or env["personal.income.tax"].browse(value).invoice_id.move_id.line_item_summary) or ""}',
                            },
                        },
                    }
                }
            </field>
        </record>


     	# Purchase Invoice Plan
        <record id="xlsx_report_purchase_invoice_plan" model="ir.attachment">
            <field name="res_model">xlsx.report.purchase.invoice.plan</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_purchase_invoice_plan.xlsx</field>
            <field name="name">Purchase Invoice Plan</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Purchase Invoice Plan Report': {
                            '_HEAD_': {
                                'C2': 'org_ids${value and ", ".join([x.operating_unit_id.name for x in value]) or ""}#{number_format=text}',
                                'C3': 'date_po_start${value and value.strftime("%d/%m/%Y") or ""}',
                                'D3': 'date_po_end${value and "to  "+value.strftime("%d/%m/%Y") or ""}',
                                'C4': 'purchase_ids${value and ", ".join([x.name for x in value]) or ""}#{number_format=text}',
                                'C5': 'contract_ids${value and ", ".join([x.poc_code for x in value]) or ""}#{number_format=text}',
                                'C6': 'date_contract_action_start${value and value.strftime("%d/%m/%Y") or ""}',
                                'D6': 'date_contract_action_end${value and "to  "+value.strftime("%d/%m/%Y") or ""}',
                                'C7': 'account_ids${value and ", ".join([x.code for x in value]) or ""}#{number_format=text}',
                                'C8': 'chartfield_ids${value and ", ".join([x.code for x in value]) or ""}#{number_format=text}',
                                'C9': 'filter_description${value or ""}#{number_format=text}',
                            },
                            'results': {   
                                'A12':'org_id.operating_unit_id.name${value or ""}#{number_format=text}',
								'B12':'po_fiscalyear${value or ""}#{number_format=text}',
								'C12':'purchase_id.date_order${value and value.strftime("%d/%m/%Y") or ""}',
								'D12':'purchase_id.name${value or ""}#{number_format=text}',
								'E12':'purchase_line_id.docline_seq${value or ""}#{number_format=text}',
								'F12':'contract_id.poc_code${value or ""}#{number_format=text}',
								'G12':'contract_id.name${value or ""}#{number_format=text}',
								'H12':'po_contract_type${value or ""}#{number_format=text}',
								'I12':'contract_id.action_date${value and value.strftime("%d/%m/%Y") or ""}',
								'J12':'contract_id.duration_start2end${value or ""}#{number_format=text}',
								'K12':'purchase_id.date_contract_start${value and value.strftime("%d/%m/%Y") or ""}',
								'L12':'purchase_id.date_contract_end${value and value.strftime("%d/%m/%Y") or ""}',
								'M12':'supplier_id.search_key${value or ""}#{number_format=text}',
								'N12':'supplier_id.name${value or ""}#{number_format=text}',
								'O12':'product_id.product_tmpl_id.categ_id.name${value or ""}#{number_format=text}',
								'P12':'product_id.name_template${value or ""}#{number_format=text}',
								'Q12':'purchase_line_id.name${value or ""}#{number_format=text}',
								'R12':'activity_group${value or ""}#{number_format=text}',
								'S12':'activity_rpt${value or ""}#{number_format=text}',
								'T12':'account_id.code${value or ""}#{number_format=text}',
								'U12':'account_id.name${value or ""}#{number_format=text}',
								'V12':'budget_code${value or ""}#{number_format=text}',
								'W12':'budget_name${value or ""}#{number_format=text}',
								'X12':'fund${value or ""}#{number_format=text}',
								'Y12':'fiscal_year_by_invoice_plan${value or ""}#{number_format=text}',
								'Z12':'purchase_line_id.product_qty${value or ""}#{number_format=number}',
								'AA12':'purchase_line_id.price_unit${value or ""}#{number_format=number}',
								'AB12':'no_of_installment${value or ""}#{number_format=text}',
								'AC12':'installment${value or ""}#{number_format=text}',
								'AD12':'inv_plan_id.description${value or ""}#{number_format=text}',
								'AE12':'inv_plan_id.date_invoice${value and value.strftime("%d/%m/%Y") or ""}',
								'AF12':'period_plan_id.code${value or ""}#{number_format=text}',
								'AG12':'inv_plan_id.deposit_amount${value or ""}#{number_format=number}',
								'AH12':'inv_plan_id.deposit_percent${value or ""}#{number_format=number}',
								'AI12':'inv_plan_id.invoice_amount${value or ""}#{number_format=number}',
								'AJ12':'currency${value or ""}#{number_format=text}',
								'AK12':'inv_plan_id.invoice_percent${value or ""}#{number_format=number}',
								'AL12':'taxes${value or ""}#{number_format=text}',
								'AM12':'inv_plan_id.subtotal${value or ""}#{number_format=number}',
								'AN12':'purchase_id.currency_rate${value or 1}',
								'AO12':'${"=?(AI12)*?(AN12)"}#{number_format=number}',
								'AP12':'${"=?(AM12)*?(AN12)"}#{number_format=number}',
								'AQ12':'amount_curr_fisyear_local${value or ""}#{number_format=number}',
								'AR12':'amount_next_fisyear_local${value or ""}#{number_format=number}',
								'AS12':'inv_plan_id.state${value or ""}#{number_format=text}',
								'AT12':'wa_number${value or ""}#{number_format=text}',
								'AU12':'acceptance_date${value and value.strftime("%d/%m/%Y") or ""}',
								'AV12':'plan_qty${value or ""}#{number_format=number}',
								'AW12':'plan_unit_price${value or ""}#{number_format=number}',
								'AX12':'subtotal${value or ""}#{number_format=number}',
								'AY12':'billing_id.name${value or ""}#{number_format=text}',
								'AZ12':'invoice_id.number${value or ""}#{number_format=text}',
								'BA12':'invoice_id.date_document${value and value.strftime("%d/%m/%Y") or ""}',
								'BB12':'invoice_id.date_invoice${value and value.strftime("%d/%m/%Y") or ""}',
								'BC12':'period_kv_id.code${value or ""}#{number_format=text}',
								'BD12':'invoice_id.supplier_invoice_number${value or ""}#{number_format=text}',
								'BE12':'invoice_id.currency_rate${value or ""}',
								'BF12':'inv_amount${value or ""}#{number_format=number}',
								'BG12':'${"=?(BE12)*?(BF12)"}#{number_format=number}',
								'BH12':'purchase_id.use_deposit${value and value is True and "X" or ""}#{number_format=text}',
								'BI12':'advance_deposit${value or ""}#{number_format=text}',
								'BJ12':'purchase_id.is_fin_lease${value and value is True and "X" or ""}#{number_format=text}',
								'BK12':'purchase_id.state${value and (value == "draft" and "Draft" or value == "confirmed" and "Waiting to Release" or value == "approved" and "PO Released"or value == "done" and "Done" or value) or ""}#{number_format=text}',
								'BL12':'purchase_id.technical_closed${value and value is True and "X" or ""}#{number_format=text}',
								'BM12':'purchase_id.use_invoice_plan${value and value is True and "X" or ""}#{number_format=text}',
                            },
                        },
                    }
                }
            </field>
        </record>
		
        # Purchase no Invoice Plan
        <record id="xlsx_report_purchase_no_invoice_plan" model="ir.attachment">
            <field name="res_model">xlsx.report.purchase.no.invoice.plan</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_purchase_no_invoice_plan.xlsx</field>
            <field name="name">Purchase no Invoice Plan</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Purchase no Invoice Plan Report': {
                            '_HEAD_': {
                                'C2': 'org_ids${value and ", ".join([x.operating_unit_id.name for x in value]) or ""}#{number_format=text}',
                                'C3': 'date_po_start${value and value.strftime("%d/%m/%Y") or ""}',
                                'D3': 'date_po_end${value and "to  "+value.strftime("%d/%m/%Y") or ""}',
                                'C4': 'purchase_ids${value and ", ".join([x.name for x in value]) or ""}#{number_format=text}',
                                'C5': 'contract_ids${value and ", ".join([x.poc_code for x in value]) or ""}#{number_format=text}',
                                'C6': 'date_contract_action_start${value and value.strftime("%d/%m/%Y") or ""}',
                                'D6': 'date_contract_action_end${value and "to  "+value.strftime("%d/%m/%Y") or ""}',
                                'C7': 'account_ids${value and ", ".join([x.code for x in value]) or ""}#{number_format=text}',
                                'C8': 'chartfield_ids${value and ", ".join([x.code for x in value]) or ""}#{number_format=text}',
                            },
                            'results': {   
                                'A11':'org_id.operating_unit_id.name${value or ""}#{number_format=text}',
								'B11':'po_fiscalyear${value or ""}#{number_format=text}',
								'C11':'purchase_id.date_order${value and value.strftime("%d/%m/%Y") or ""}',
								'D11':'purchase_id.name${value or ""}#{number_format=text}',
								'E11':'purchase_line_id.docline_seq${value or ""}#{number_format=text}',
								'F11':'contract_id.poc_code${value or ""}#{number_format=text}',
								'G11':'po_contract_type${value or ""}#{number_format=text}',
								'H11':'contract_id.action_date${value and value.strftime("%d/%m/%Y") or ""}',
								'I11':'contract_id.duration_start2end${value or ""}#{number_format=text}',
								'J11':'purchase_id.date_contract_start${value and value.strftime("%d/%m/%Y") or ""}',
								'K11':'purchase_id.date_contract_end${value and value.strftime("%d/%m/%Y") or ""}',
								'L11':'supplier_id.search_key${value or ""}#{number_format=text}',
								'M11':'supplier_id.name${value or ""}#{number_format=text}',
								'N11':'product_id.product_tmpl_id.categ_id.name${value or ""}#{number_format=text}',
								'O11':'product_id.name_template${value or ""}#{number_format=text}',
								'P11':'purchase_line_id.name${value or ""}#{number_format=text}',
								'Q11':'activity_group${value or ""}#{number_format=text}',
								'R11':'activity_rpt${value or ""}#{number_format=text}',
								'S11':'account_id.code${value or ""}#{number_format=text}',
								'T11':'account_id.name${value or ""}#{number_format=text}',
								'U11':'budget_code${value or ""}#{number_format=text}',
								'V11':'budget_name${value or ""}#{number_format=text}',
								'W11':'fund${value or ""}#{number_format=text}',
								'X11':'fiscal_year_by_invoice_plan${value or ""}#{number_format=text}',
								'Y11':'purchase_line_id.product_qty${value or ""}#{number_format=number}',
								'Z11':'purchase_line_id.price_unit${value or ""}#{number_format=number}',
								'AA11':'',
								'AB11':'invoice_line_id.name${value or ""}#{number_format=text}',
								'AC11':'',
								'AD11':'',
								'AE11':'',
								'AF11':'invoice_line_id.price_subtotal${value or ""}#{number_format=number}',
								'AG11':'currency${value or ""}#{number_format=text}',
								'AH11':'',
								'AI11':'taxes${value or ""}#{number_format=text}',
								'AJ11':'purchase_line_id${value and value.product_qty*value.price_unit or ""}#{number_format=number}',
								'AK11':'exchange_rate_po${value or 1}#{number_format=number}',
								'AL11':'${"=?(AF11)*?(AK11)"}#{number_format=number}',
								'AM11':'${"=?(AJ11)*?(AK11)"}#{number_format=number}',
								'AN11':'invoice_id.state${value or ""}#{number_format=text}',
								'AO11':'acceptance_id.name${value or ""}#{number_format=text}',
								'AP11':'acceptance_id.date_accept${value and value.strftime("%d/%m/%Y") or ""}',
								'AQ11':'plan_qty${value or ""}#{number_format=number}',
								'AR11':'plan_unit_price${value or ""}#{number_format=number}',
								'AS11':'subtotal${value or ""}#{number_format=number}',
								'AT11':'billing_id.name${value or ""}#{number_format=text}',
								'AU11':'invoice_id.number${value or ""}#{number_format=text}',
								'AV11':'invoice_id.date_document${value and value.strftime("%d/%m/%Y") or ""}',
								'AW11':'invoice_id.date_invoice${value and value.strftime("%d/%m/%Y") or ""}',
								'AX11':'invoice_id.supplier_invoice_number${value or ""}#{number_format=text}',
								'AY11':'exchange_rate_kv${value or ""}#{number_format=number}',
								'AZ11':'inv_amount${value or ""}#{number_format=number}',
								'BA11':'${"=?(AZ11)*?(AY11)"}#{number_format=number}',
								'BB11':'purchase_id.use_deposit${value and value is True and "X" or ""}#{number_format=text}',
								'BC11':'advance_deposit${value or ""}#{number_format=text}',
								'BD11':'purchase_id.is_fin_lease${value and value is True and "X" or ""}#{number_format=text}',
								'BE11':'purchase_id.state${value and (value == "draft" and "Draft" or value == "confirmed" and "Waiting to Release" or value == "approved" and "PO Released"or value == "done" and "Done" or value) or ""}#{number_format=text}',
								'BF11':'purchase_id.technical_closed${value and value is True and "X" or ""}#{number_format=text}',
								'BG11':'purchase_id.use_invoice_plan${value and value is True and "X" or ""}#{number_format=text}',
                            },
                        },
                    }
                }
            </field>
        </record>

	     # Asset Estimate Report
	     <record id="xlsx_report_asset_estimate" model="ir.attachment">
	         <field name="res_model">asset.estimate.report</field>
	         <field name="datas"></field>
	         <field name="datas_fname">xlsx_report_asset_estimate.xlsx</field>
	         <field name="name">Asset Estimate Report</field>
	         <field name="parent_id" eval="ref('dir_account_reports')"/>
	         <field name="description">
	             {
	                 '__EXPORT__': {
	                     'Asset Estimate Report': {
	                         '_HEAD_': {
	                             'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}#{number_format=text}',
	                             'B4': 'fiscalyear_start_id.name${value or ""}#{number_format=text}',
	                             'D4': 'fiscalyear_end_id.name${value or ""}#{number_format=text}',
	                             'B5': 'account_ids${value and ", ".join([x.code for x in value]) or ""}#{number_format=text}',
	                             'D5': 'asset_state${value and ", ".join([x.name for x in value]) or ""}#{number_format=text}',
	                             'B6': 'asset_profile_ids${value and ", ".join([x.name for x in value]) or ""}#{number_format=text}',
	                             'D6': 'asset_status_ids${value and ", ".join([x.name for x in value]) or ""}#{number_format=text}',
	                             'D7': 'asset_active${value or ""}#{number_format=text}',
	                             'X9': 'period_year_id.name${value and "Depreciation FY"+value or ""}#{number_format=text}',
	                             'Y9': 'period_year_id.name${value and "Depreciation FY"+str(int(value)+1) or ""}#{number_format=text}',
	                             'Z9': 'period_year_id.name${value and "Depreciation FY"+str(int(value)+2) or ""}#{number_format=text}',
	                             'AA9': 'period_year_id.name${value and "Depreciation FY"+str(int(value)+3) or ""}#{number_format=text}',
	                             'AB9': 'period_year_id.name${value and "Depreciation FY"+str(int(value)+4) or ""}#{number_format=text}',
	
	                           },
	                         'results': {
								 'A10': 'budget${value and value.org_id.name_short or ""}#{number_format=text}',
								 'B10': 'account_code${value or ""}#{number_format=text}',
								 'C10': 'account_name${value or ""}#{number_format=text}',
								 'D10': 'profile_id.product_categ_id${value and value.name or ""}#{number_format=text}',
								 'E10': 'profile_id${value and value.code or ""}#{number_format=text}',
	                             'F10': 'profile_id${value and value.name or ""}#{number_format=text}',
	                             'G10': 'code${value or ""}#{number_format=text}',
	                             'H10': 'name${value or ""}#{number_format=text}',
	                             'I10': 'parent_id${value and value.name or ""}#{number_format=text}',
	                             'J10': 'picking_id${value and value.acceptance_id and value.acceptance_id.date_accept or ""}#{number_format=date}',
	                             'K10': 'date_start${value or ""}#{number_format=date}',
	                             'L10': 'budget_type${value or ""}#{number_format=text}',
	                             'M10': 'budget${value and value.code or ""}#{number_format=text}',
	                             'N10': 'budget${value and value.name or ""}#{number_format=text}',
	                             'O10': 'owner_budget${value and value.code or ""}#{number_format=text}',
	                             'P10': 'owner_budget${value and value.name or ""}#{number_format=text}',
	                             'Q10': 'owner_budget${value and value.costcenter_id.code or ""}#{number_format=text}',
	                             'R10': 'owner_budget${value and value.costcenter_id.name or ""}#{number_format=text}',
	                             'S10': 'partner_id${value and value.search_key or ""}#{number_format=text}',
	                             'T10': 'partner_id${value and value.name or ""}#{number_format=text}',
	                             'U10': 'date_start${value and env["account.fiscalyear"].browse(env["account.fiscalyear"].find(value)).name or ""}#{number_format=text}',
	                             'V10': 'purchase_value${value or 0}#{number_format=number}',
	                             'W10': 'accumulated_bf${value or 0}#{number_format=number}',
	                             'X10': 'depreciation${value or 0}#{number_format=number}',
	                             'Y10': 'depreciation1${value or 0}#{number_format=number}',
	                             'Z10': 'depreciation2${value or 0}#{number_format=number}',
	                             'AA10': 'depreciation3${value or 0}#{number_format=number}',
	                             'AB10': 'depreciation4${value or 0}#{number_format=number}',
	                             'AC10': '${"=SUM(?(W10):?(AB10))"}#{number_format=number}',
	                             'AD10': '${"=?(V10)-?(AC10)"}#{number_format=number}',
	                             'AE10': 'method_number${value or 0}#{number_format=text}',
	                             'AF10': 'adjust_id${value and value.name or ""}#{number_format=text}',
	                             'AG10': 'status${value and value.name or ""}#{number_format=text}',
	                             'AH10': 'date_remove${value or ""}#{number_format=date}',
	                             'AI10': 'state${value and ("running" if value == "open" else value) or ""}#{number_format=text}',
	                         }
	
	                       },
	
	                  }
	            }
	         </field>
	     </record>

         # Preprint Receipt
        <record id="xlsx_report_preprint_receipt" model="ir.attachment">
            <field name="res_model">xlsx.report.preprint.receipt</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_preprint_receipt.xlsx</field>
            <field name="name">Preprint Receipt</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Preprint Receipt': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}#{align=left;number_format=text}',
                                'B3': 'fiscalyear_start_id.name${value or ""}#{align=left;number_format=text}',
                                'D3': 'fiscalyear_end_id.name${value or ""}#{align=left;number_format=text}',
                                'B4': 'period_start_id.name${value or ""}#{align=left;number_format=text}',
                                'D4': 'period_end_id.name${value or ""}#{align=left;number_format=text}',
                                'B5': 'postingdate_start${value and value.strftime("%d/%m/%Y") or ""}#{align=left;number_format=text}',
                                'D5': 'postingdate_end${value and value.strftime("%d/%m/%Y") or ""}#{align=left;number_format=text}',
                                'B6': 'operating_unit_ids${value and ", ".join([x.name for x in value]) or ""}#{align=left;number_format=text}',
                                'B7': 'preprint_number${value and ", ".join([x.name for x in value]) or ""}#{align=left;number_format=text}',
                                'B8': 'move_id${value and ", ".join([x.name for x in value]) or ""}#{align=left;number_format=text}',
                            },
	                        'results': {
	                            'A11': 'number_preprint${value or ""}#{align=left;number_format=text}',
	                            'B11': 'name${value or ""}#{align=left;number_format=text}',
	                         	'C11': 'period_id.fiscalyear_id.name${value or ""}',
	                            'D11': 'period_id.name${value or ""}#{number_format=text}',
	                            'E11': 'date${value and value.strftime("%d/%m/%Y") or ""}',
	                            'F11': 'date_document${value and value.strftime("%d/%m/%Y") or ""}',
	                            'G11': 'operating_unit_id${value and value.name or  ""}',
	                            'H11': 'taxbranch_id${value and value.code or ""}#{align=left;number_format=text}',
	                            'I11': 'narration${value or ""}#{align=left;number_format=text}',
	                            'J11': 'partner_id${value and value.search_key or ""}#{align=left;number_format=text}',
	                            'K11': 'partner_id${value and value.display_name2 or ""}#{align=left;number_format=text}',
	                            'L11': 'document_origin${value or ""}#{align=left;number_format=text}',
	                            'M11': 'system_id${value and value.name or ""}#{align=left;number_format=text}',
	                            'N11': 'base${value or ""}',
	                            'O11': 'amount${value or ""}',
	                            'P11': 'create_uid${value and value.name or ""}#{align=left;number_format=text}',
	                         },
                         }
                    }
                }
            </field>
        </record>
		

        #Employee Advance Report
         <record id="xlsx_report_pabi_employee_advance_report" model="ir.attachment">
            <field name="res_model">xlsx.report.pabi.employee.advance.report</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_pabi_employee_advance_report.xlsx</field>
            <field name="name">Employee Advance Report</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                   '__EXPORT__': {
                       'Employee Advance Report': {
                         '_HEAD_': {                                                 	
                         	'B5': 'date_report${value or ""}#{number_format=date}',
                            'B6': 'employee_codes${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.first_name,"", x.last_name]))) for x in value]) or ""}',
                            'B7': '${env.user.display_name}',
                            'B8': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                        			},
                        'results': {
                        	'A13' : 'employee_code${value or ""}#{align=left}',
                            'B13' : 'name_th${value or ""}#{align=left;number_format=text}',
                            'C13' : 'av_doc${value or ""}#{align=left;number_format=text}',
                            'D13' : 'description${value or ""}#{align=left;number_format=text}',
                            'E13' : 'supplier_invoice_number${value or ""}#{align=left;number_format=text}',
                            'F13' : 'source_doc${value or ""}#{align=left;number_format=text}',
                            'G13' : 'doc_date${value or ""}#{align=left;number_format=date}',
                            'H13' : 'posting_date${value or ""}#{align=left;number_format=date}',
                            'I13' : 'due_date${value or ""}#{align=left;number_format=date}',
                            'J13' : 'period_name${value or ""}#{align=left;number_format=text}',
                            'K13' : 'organization${value or ""}#{align=left;number_format=text}',
                            'L13' : 'costcenter_code${value or ""}#{align=left}',
                            'M13' : 'costcenter_name${value or ""}#{align=left;number_format=text}',
                            'N13' : 'source_budget${value or ""}#{align=left;number_format=text}',
                            'O13' : 'source_budget_name${value or ""}#{align=left;number_format=text}',
                            'P13' : 'amount${value or ""}#{align=right;number_format=number}',
                            'Q13' : 'reconcile_ref${value or ""}#{align=left;number_format=text}',
                            'R13' : 'reconcile_partial_id${value or ""}#{align=left;number_format=text}',
                        	},
                        	'_GROUPBY_results["employee_code"]': {  # groupby
                                'P13': '@{sum}#{font=bold;number_format=number}',
                            },
                         }
                    }
                }
            </field>
        </record>
        # PV-PE Report 
	    <record id="xlsx_report_pv_pe" model="ir.attachment">
	         <field name="res_model">xlsx.report.pv.pe</field>
	         <field name="datas"></field>
	         <field name="datas_fname">xlsx_report_pv_pe.xlsx</field>
	         <field name="name">PV-PE Report</field>
	         <field name="parent_id" eval="ref('dir_account_reports')"/>
	         <field name="description">
	             {
	                 '__EXPORT__': {
	                     'PV-PE': {
	                         '_HEAD_': { },
	                         'results': {
	                             'A2': 'gl${value or ""}#{align=center;number_format=text}',
	                             'B2': 'pe_doc${value  or ""}#{align=center}',
	                             'C2': 'pe_valuedate${value  or ""}#{align=right;number_format=date}',
	                             'D2': 'pe_transfertype${value or ""}#{align=left}',
	                             'E2': 'pe_amount${value or ""}#{align=right;number_format=number}',
	                             'F2': 'pv_doc${value or ""}#{align=center}',
	                             'G2': 'pv_posting_date${value or ""}#{align=right;number_format=date}',
	                             'H2': 'pv_cheque_date${value or ""}#{align=right;number_format=date}',
	                             'I2': 'pv_valuedate${value  or ""}#{align=right;number_format=date}',
	                             'J2': 'pv_amount${value or ""}#{align=right;number_format=number}',
	                             'K2': 'state${value or ""}#{align=left}',
	                         },
	                     }
	                 }
	             }
	        </field>
	    </record>
	    # CGD Report
        <record id="xlsx_report_cgd" model="ir.attachment">
            <field name="res_model">xlsx.report.cgd</field>
            <field name="datas"></field>
            <field name="datas_fname">report_cgd.xlsx</field>
            <field name="name">CGD Reports</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Report CGD': {
                            '_HEAD_': {
                                'C1': '${time.strftime("%m/%Y")}',
                            },
                            'results': {
                            	'A4': '${"=ROW()-3"}',
                                'B4': 'partner_taxid${value or ""}#{align=left;number_format=text}',
                                'C4': 'partner_name${value or ""}#{align=left;number_format=text}',
                                'D4': 'name${value or ""}#{align=left;number_format=text}',
                                'E4': 'base${value or ""}#{align=right;number_format=number}',
                                'F4': 'invoice_date${value or ""}#{align=left;number_format=date}',
                                'G4': 'partner_invoice_number${value or ""}#{align=left;number_format=text}',
                                'H4': 'txtreason${value or ""}#{align=left;number_format=text}',
                                'K4': 'source_document${value or ""}#{align=left;number_format=text}',
                                'L4': 'partner_id${value or ""}#{align=left;number_format=text}',                                
                            },                            
                        }
                    }
                }
            </field>
        </record>
    </data>
</openerp>